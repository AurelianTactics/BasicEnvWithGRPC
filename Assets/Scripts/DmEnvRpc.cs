// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dm_env_rpc.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DmEnvRpc.V1 {

  /// <summary>Holder for reflection information generated from dm_env_rpc.proto</summary>
  public static partial class DmEnvRpcReflection {

    #region Descriptor
    /// <summary>File descriptor for dm_env_rpc.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DmEnvRpcReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBkbV9lbnZfcnBjLnByb3RvEg1kbV9lbnZfcnBjLnYxGhlnb29nbGUvcHJv",
            "dG9idWYvYW55LnByb3RvIrkHCgZUZW5zb3ISMgoGZmxvYXRzGAEgASgLMiAu",
            "ZG1fZW52X3JwYy52MS5UZW5zb3IuRmxvYXRBcnJheUgAEjQKB2RvdWJsZXMY",
            "AiABKAsyIS5kbV9lbnZfcnBjLnYxLlRlbnNvci5Eb3VibGVBcnJheUgAEjAK",
            "BWludDhzGAMgASgLMh8uZG1fZW52X3JwYy52MS5UZW5zb3IuSW50OEFycmF5",
            "SAASMgoGaW50MzJzGAQgASgLMiAuZG1fZW52X3JwYy52MS5UZW5zb3IuSW50",
            "MzJBcnJheUgAEjIKBmludDY0cxgFIAEoCzIgLmRtX2Vudl9ycGMudjEuVGVu",
            "c29yLkludDY0QXJyYXlIABIyCgZ1aW50OHMYBiABKAsyIC5kbV9lbnZfcnBj",
            "LnYxLlRlbnNvci5VaW50OEFycmF5SAASNAoHdWludDMycxgHIAEoCzIhLmRt",
            "X2Vudl9ycGMudjEuVGVuc29yLlVpbnQzMkFycmF5SAASNAoHdWludDY0cxgI",
            "IAEoCzIhLmRtX2Vudl9ycGMudjEuVGVuc29yLlVpbnQ2NEFycmF5SAASMAoF",
            "Ym9vbHMYCSABKAsyHy5kbV9lbnZfcnBjLnYxLlRlbnNvci5Cb29sQXJyYXlI",
            "ABI0CgdzdHJpbmdzGAogASgLMiEuZG1fZW52X3JwYy52MS5UZW5zb3IuU3Ry",
            "aW5nQXJyYXlIABIyCgZwcm90b3MYCyABKAsyIC5kbV9lbnZfcnBjLnYxLlRl",
            "bnNvci5Qcm90b0FycmF5SAASDQoFc2hhcGUYDyADKAUaGgoJSW50OEFycmF5",
            "Eg0KBWFycmF5GAEgASgMGhsKCkludDMyQXJyYXkSDQoFYXJyYXkYASADKAUa",
            "GwoKSW50NjRBcnJheRINCgVhcnJheRgBIAMoAxobCgpVaW50OEFycmF5Eg0K",
            "BWFycmF5GAEgASgMGhwKC1VpbnQzMkFycmF5Eg0KBWFycmF5GAEgAygNGhwK",
            "C1VpbnQ2NEFycmF5Eg0KBWFycmF5GAEgAygEGhsKCkZsb2F0QXJyYXkSDQoF",
            "YXJyYXkYASADKAIaHAoLRG91YmxlQXJyYXkSDQoFYXJyYXkYASADKAEaGgoJ",
            "Qm9vbEFycmF5Eg0KBWFycmF5GAEgAygIGhwKC1N0cmluZ0FycmF5Eg0KBWFy",
            "cmF5GAEgAygJGjEKClByb3RvQXJyYXkSIwoFYXJyYXkYASADKAsyFC5nb29n",
            "bGUucHJvdG9idWYuQW55QgkKB3BheWxvYWQi7AQKClRlbnNvclNwZWMSDAoE",
            "bmFtZRgBIAEoCRINCgVzaGFwZRgCIAMoBRImCgVkdHlwZRgDIAEoDjIXLmRt",
            "X2Vudl9ycGMudjEuRGF0YVR5cGUSLAoDbWluGAQgASgLMh8uZG1fZW52X3Jw",
            "Yy52MS5UZW5zb3JTcGVjLlZhbHVlEiwKA21heBgFIAEoCzIfLmRtX2Vudl9y",
            "cGMudjEuVGVuc29yU3BlYy5WYWx1ZRq8AwoFVmFsdWUSMgoGZmxvYXRzGAkg",
            "ASgLMiAuZG1fZW52X3JwYy52MS5UZW5zb3IuRmxvYXRBcnJheUgAEjQKB2Rv",
            "dWJsZXMYCiABKAsyIS5kbV9lbnZfcnBjLnYxLlRlbnNvci5Eb3VibGVBcnJh",
            "eUgAEjAKBWludDhzGAsgASgLMh8uZG1fZW52X3JwYy52MS5UZW5zb3IuSW50",
            "OEFycmF5SAASMgoGaW50MzJzGAwgASgLMiAuZG1fZW52X3JwYy52MS5UZW5z",
            "b3IuSW50MzJBcnJheUgAEjIKBmludDY0cxgNIAEoCzIgLmRtX2Vudl9ycGMu",
            "djEuVGVuc29yLkludDY0QXJyYXlIABIyCgZ1aW50OHMYDiABKAsyIC5kbV9l",
            "bnZfcnBjLnYxLlRlbnNvci5VaW50OEFycmF5SAASNAoHdWludDMycxgPIAEo",
            "CzIhLmRtX2Vudl9ycGMudjEuVGVuc29yLlVpbnQzMkFycmF5SAASNAoHdWlu",
            "dDY0cxgQIAEoCzIhLmRtX2Vudl9ycGMudjEuVGVuc29yLlVpbnQ2NEFycmF5",
            "SABCCQoHcGF5bG9hZEoECAEQCSKfAQoSQ3JlYXRlV29ybGRSZXF1ZXN0EkEK",
            "CHNldHRpbmdzGAEgAygLMi8uZG1fZW52X3JwYy52MS5DcmVhdGVXb3JsZFJl",
            "cXVlc3QuU2V0dGluZ3NFbnRyeRpGCg1TZXR0aW5nc0VudHJ5EgsKA2tleRgB",
            "IAEoCRIkCgV2YWx1ZRgCIAEoCzIVLmRtX2Vudl9ycGMudjEuVGVuc29yOgI4",
            "ASIpChNDcmVhdGVXb3JsZFJlc3BvbnNlEhIKCndvcmxkX25hbWUYASABKAki",
            "xwIKFkFjdGlvbk9ic2VydmF0aW9uU3BlY3MSQwoHYWN0aW9ucxgBIAMoCzIy",
            "LmRtX2Vudl9ycGMudjEuQWN0aW9uT2JzZXJ2YXRpb25TcGVjcy5BY3Rpb25z",
            "RW50cnkSTQoMb2JzZXJ2YXRpb25zGAIgAygLMjcuZG1fZW52X3JwYy52MS5B",
            "Y3Rpb25PYnNlcnZhdGlvblNwZWNzLk9ic2VydmF0aW9uc0VudHJ5GkkKDEFj",
            "dGlvbnNFbnRyeRILCgNrZXkYASABKAQSKAoFdmFsdWUYAiABKAsyGS5kbV9l",
            "bnZfcnBjLnYxLlRlbnNvclNwZWM6AjgBGk4KEU9ic2VydmF0aW9uc0VudHJ5",
            "EgsKA2tleRgBIAEoBBIoCgV2YWx1ZRgCIAEoCzIZLmRtX2Vudl9ycGMudjEu",
            "VGVuc29yU3BlYzoCOAEirwEKEEpvaW5Xb3JsZFJlcXVlc3QSEgoKd29ybGRf",
            "bmFtZRgBIAEoCRI/CghzZXR0aW5ncxgCIAMoCzItLmRtX2Vudl9ycGMudjEu",
            "Sm9pbldvcmxkUmVxdWVzdC5TZXR0aW5nc0VudHJ5GkYKDVNldHRpbmdzRW50",
            "cnkSCwoDa2V5GAEgASgJEiQKBXZhbHVlGAIgASgLMhUuZG1fZW52X3JwYy52",
            "MS5UZW5zb3I6AjgBIkkKEUpvaW5Xb3JsZFJlc3BvbnNlEjQKBXNwZWNzGAEg",
            "ASgLMiUuZG1fZW52X3JwYy52MS5BY3Rpb25PYnNlcnZhdGlvblNwZWNzIq4B",
            "CgtTdGVwUmVxdWVzdBI4CgdhY3Rpb25zGAEgAygLMicuZG1fZW52X3JwYy52",
            "MS5TdGVwUmVxdWVzdC5BY3Rpb25zRW50cnkSHgoWcmVxdWVzdGVkX29ic2Vy",
            "dmF0aW9ucxgCIAMoBBpFCgxBY3Rpb25zRW50cnkSCwoDa2V5GAEgASgEEiQK",
            "BXZhbHVlGAIgASgLMhUuZG1fZW52X3JwYy52MS5UZW5zb3I6AjgBItMBCgxT",
            "dGVwUmVzcG9uc2USMgoFc3RhdGUYASABKA4yIy5kbV9lbnZfcnBjLnYxLkVu",
            "dmlyb25tZW50U3RhdGVUeXBlEkMKDG9ic2VydmF0aW9ucxgCIAMoCzItLmRt",
            "X2Vudl9ycGMudjEuU3RlcFJlc3BvbnNlLk9ic2VydmF0aW9uc0VudHJ5GkoK",
            "EU9ic2VydmF0aW9uc0VudHJ5EgsKA2tleRgBIAEoBBIkCgV2YWx1ZRgCIAEo",
            "CzIVLmRtX2Vudl9ycGMudjEuVGVuc29yOgI4ASKTAQoMUmVzZXRSZXF1ZXN0",
            "EjsKCHNldHRpbmdzGAEgAygLMikuZG1fZW52X3JwYy52MS5SZXNldFJlcXVl",
            "c3QuU2V0dGluZ3NFbnRyeRpGCg1TZXR0aW5nc0VudHJ5EgsKA2tleRgBIAEo",
            "CRIkCgV2YWx1ZRgCIAEoCzIVLmRtX2Vudl9ycGMudjEuVGVuc29yOgI4ASJF",
            "Cg1SZXNldFJlc3BvbnNlEjQKBXNwZWNzGAEgASgLMiUuZG1fZW52X3JwYy52",
            "MS5BY3Rpb25PYnNlcnZhdGlvblNwZWNzIrEBChFSZXNldFdvcmxkUmVxdWVz",
            "dBISCgp3b3JsZF9uYW1lGAEgASgJEkAKCHNldHRpbmdzGAIgAygLMi4uZG1f",
            "ZW52X3JwYy52MS5SZXNldFdvcmxkUmVxdWVzdC5TZXR0aW5nc0VudHJ5GkYK",
            "DVNldHRpbmdzRW50cnkSCwoDa2V5GAEgASgJEiQKBXZhbHVlGAIgASgLMhUu",
            "ZG1fZW52X3JwYy52MS5UZW5zb3I6AjgBIhQKElJlc2V0V29ybGRSZXNwb25z",
            "ZSITChFMZWF2ZVdvcmxkUmVxdWVzdCIUChJMZWF2ZVdvcmxkUmVzcG9uc2Ui",
            "KQoTRGVzdHJveVdvcmxkUmVxdWVzdBISCgp3b3JsZF9uYW1lGAEgASgJIhYK",
            "FERlc3Ryb3lXb3JsZFJlc3BvbnNlItEDChJFbnZpcm9ubWVudFJlcXVlc3QS",
            "OQoMY3JlYXRlX3dvcmxkGAEgASgLMiEuZG1fZW52X3JwYy52MS5DcmVhdGVX",
            "b3JsZFJlcXVlc3RIABI1Cgpqb2luX3dvcmxkGAIgASgLMh8uZG1fZW52X3Jw",
            "Yy52MS5Kb2luV29ybGRSZXF1ZXN0SAASKgoEc3RlcBgDIAEoCzIaLmRtX2Vu",
            "dl9ycGMudjEuU3RlcFJlcXVlc3RIABIsCgVyZXNldBgEIAEoCzIbLmRtX2Vu",
            "dl9ycGMudjEuUmVzZXRSZXF1ZXN0SAASNwoLcmVzZXRfd29ybGQYBSABKAsy",
            "IC5kbV9lbnZfcnBjLnYxLlJlc2V0V29ybGRSZXF1ZXN0SAASNwoLbGVhdmVf",
            "d29ybGQYBiABKAsyIC5kbV9lbnZfcnBjLnYxLkxlYXZlV29ybGRSZXF1ZXN0",
            "SAASOwoNZGVzdHJveV93b3JsZBgHIAEoCzIiLmRtX2Vudl9ycGMudjEuRGVz",
            "dHJveVdvcmxkUmVxdWVzdEgAEikKCWV4dGVuc2lvbhgPIAEoCzIULmdvb2ds",
            "ZS5wcm90b2J1Zi5BbnlIAEIJCgdwYXlsb2FkSgQICBALSgQIEBARItMDChNF",
            "bnZpcm9ubWVudFJlc3BvbnNlEjoKDGNyZWF0ZV93b3JsZBgBIAEoCzIiLmRt",
            "X2Vudl9ycGMudjEuQ3JlYXRlV29ybGRSZXNwb25zZUgAEjYKCmpvaW5fd29y",
            "bGQYAiABKAsyIC5kbV9lbnZfcnBjLnYxLkpvaW5Xb3JsZFJlc3BvbnNlSAAS",
            "KwoEc3RlcBgDIAEoCzIbLmRtX2Vudl9ycGMudjEuU3RlcFJlc3BvbnNlSAAS",
            "LQoFcmVzZXQYBCABKAsyHC5kbV9lbnZfcnBjLnYxLlJlc2V0UmVzcG9uc2VI",
            "ABI4CgtyZXNldF93b3JsZBgFIAEoCzIhLmRtX2Vudl9ycGMudjEuUmVzZXRX",
            "b3JsZFJlc3BvbnNlSAASOAoLbGVhdmVfd29ybGQYBiABKAsyIS5kbV9lbnZf",
            "cnBjLnYxLkxlYXZlV29ybGRSZXNwb25zZUgAEjwKDWRlc3Ryb3lfd29ybGQY",
            "ByABKAsyIy5kbV9lbnZfcnBjLnYxLkRlc3Ryb3lXb3JsZFJlc3BvbnNlSAAS",
            "KQoJZXh0ZW5zaW9uGA8gASgLMhQuZ29vZ2xlLnByb3RvYnVmLkFueUgAQgkK",
            "B3BheWxvYWRKBAgIEAsqnAEKCERhdGFUeXBlEhUKEUlOVkFMSURfREFUQV9U",
            "WVBFEAASCQoFRkxPQVQQARIKCgZET1VCTEUQAhIICgRJTlQ4EAMSCQoFSU5U",
            "MzIQBBIJCgVJTlQ2NBAFEgkKBVVJTlQ4EAYSCgoGVUlOVDMyEAcSCgoGVUlO",
            "VDY0EAgSCAoEQk9PTBAJEgoKBlNUUklORxAKEgkKBVBST1RPEAsqYwoURW52",
            "aXJvbm1lbnRTdGF0ZVR5cGUSHQoZSU5WQUxJRF9FTlZJUk9OTUVOVF9TVEFU",
            "RRAAEgsKB1JVTk5JTkcQARIOCgpURVJNSU5BVEVEEAISDwoLSU5URVJSVVBU",
            "RUQQAzJlCgtFbnZpcm9ubWVudBJWCgdQcm9jZXNzEiEuZG1fZW52X3JwYy52",
            "MS5FbnZpcm9ubWVudFJlcXVlc3QaIi5kbV9lbnZfcnBjLnYxLkVudmlyb25t",
            "ZW50UmVzcG9uc2UiACgBMAFiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DmEnvRpc.V1.DataType), typeof(global::DmEnvRpc.V1.EnvironmentStateType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor), global::DmEnvRpc.V1.Tensor.Parser, new[]{ "Floats", "Doubles", "Int8S", "Int32S", "Int64S", "Uint8S", "Uint32S", "Uint64S", "Bools", "Strings", "Protos", "Shape" }, new[]{ "Payload" }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.Int8Array), global::DmEnvRpc.V1.Tensor.Types.Int8Array.Parser, new[]{ "Array" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.Int32Array), global::DmEnvRpc.V1.Tensor.Types.Int32Array.Parser, new[]{ "Array" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.Int64Array), global::DmEnvRpc.V1.Tensor.Types.Int64Array.Parser, new[]{ "Array" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.Uint8Array), global::DmEnvRpc.V1.Tensor.Types.Uint8Array.Parser, new[]{ "Array" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.Uint32Array), global::DmEnvRpc.V1.Tensor.Types.Uint32Array.Parser, new[]{ "Array" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.Uint64Array), global::DmEnvRpc.V1.Tensor.Types.Uint64Array.Parser, new[]{ "Array" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.FloatArray), global::DmEnvRpc.V1.Tensor.Types.FloatArray.Parser, new[]{ "Array" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.DoubleArray), global::DmEnvRpc.V1.Tensor.Types.DoubleArray.Parser, new[]{ "Array" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.BoolArray), global::DmEnvRpc.V1.Tensor.Types.BoolArray.Parser, new[]{ "Array" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.StringArray), global::DmEnvRpc.V1.Tensor.Types.StringArray.Parser, new[]{ "Array" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.Tensor.Types.ProtoArray), global::DmEnvRpc.V1.Tensor.Types.ProtoArray.Parser, new[]{ "Array" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.TensorSpec), global::DmEnvRpc.V1.TensorSpec.Parser, new[]{ "Name", "Shape", "Dtype", "Min", "Max" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.TensorSpec.Types.Value), global::DmEnvRpc.V1.TensorSpec.Types.Value.Parser, new[]{ "Floats", "Doubles", "Int8S", "Int32S", "Int64S", "Uint8S", "Uint32S", "Uint64S" }, new[]{ "Payload" }, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.CreateWorldRequest), global::DmEnvRpc.V1.CreateWorldRequest.Parser, new[]{ "Settings" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.CreateWorldResponse), global::DmEnvRpc.V1.CreateWorldResponse.Parser, new[]{ "WorldName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.ActionObservationSpecs), global::DmEnvRpc.V1.ActionObservationSpecs.Parser, new[]{ "Actions", "Observations" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.JoinWorldRequest), global::DmEnvRpc.V1.JoinWorldRequest.Parser, new[]{ "WorldName", "Settings" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.JoinWorldResponse), global::DmEnvRpc.V1.JoinWorldResponse.Parser, new[]{ "Specs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.StepRequest), global::DmEnvRpc.V1.StepRequest.Parser, new[]{ "Actions", "RequestedObservations" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.StepResponse), global::DmEnvRpc.V1.StepResponse.Parser, new[]{ "State", "Observations" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.ResetRequest), global::DmEnvRpc.V1.ResetRequest.Parser, new[]{ "Settings" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.ResetResponse), global::DmEnvRpc.V1.ResetResponse.Parser, new[]{ "Specs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.ResetWorldRequest), global::DmEnvRpc.V1.ResetWorldRequest.Parser, new[]{ "WorldName", "Settings" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.ResetWorldResponse), global::DmEnvRpc.V1.ResetWorldResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.LeaveWorldRequest), global::DmEnvRpc.V1.LeaveWorldRequest.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.LeaveWorldResponse), global::DmEnvRpc.V1.LeaveWorldResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.DestroyWorldRequest), global::DmEnvRpc.V1.DestroyWorldRequest.Parser, new[]{ "WorldName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.DestroyWorldResponse), global::DmEnvRpc.V1.DestroyWorldResponse.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.EnvironmentRequest), global::DmEnvRpc.V1.EnvironmentRequest.Parser, new[]{ "CreateWorld", "JoinWorld", "Step", "Reset", "ResetWorld", "LeaveWorld", "DestroyWorld", "Extension" }, new[]{ "Payload" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DmEnvRpc.V1.EnvironmentResponse), global::DmEnvRpc.V1.EnvironmentResponse.Parser, new[]{ "CreateWorld", "JoinWorld", "Step", "Reset", "ResetWorld", "LeaveWorld", "DestroyWorld", "Extension" }, new[]{ "Payload" }, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  /// The data type of elements of a tensor.  This must match the types in the
  /// Tensor payload oneof.
  /// </summary>
  public enum DataType {
    /// <summary>
    /// This is the default value indicating no value was set.
    /// </summary>
    [pbr::OriginalName("INVALID_DATA_TYPE")] InvalidDataType = 0,
    /// <summary>
    /// LINT.IfChange(DataType)
    /// </summary>
    [pbr::OriginalName("FLOAT")] Float = 1,
    [pbr::OriginalName("DOUBLE")] Double = 2,
    [pbr::OriginalName("INT8")] Int8 = 3,
    [pbr::OriginalName("INT32")] Int32 = 4,
    [pbr::OriginalName("INT64")] Int64 = 5,
    [pbr::OriginalName("UINT8")] Uint8 = 6,
    [pbr::OriginalName("UINT32")] Uint32 = 7,
    [pbr::OriginalName("UINT64")] Uint64 = 8,
    [pbr::OriginalName("BOOL")] Bool = 9,
    [pbr::OriginalName("STRING")] String = 10,
    /// <summary>
    /// LINT.ThenChange(:Tensor)
    /// </summary>
    [pbr::OriginalName("PROTO")] Proto = 11,
  }

  public enum EnvironmentStateType {
    /// <summary>
    /// This is the default value indicating no value was set.  It should never be
    /// sent or received.
    /// </summary>
    [pbr::OriginalName("INVALID_ENVIRONMENT_STATE")] InvalidEnvironmentState = 0,
    /// <summary>
    /// The environment is currently in the middle of a sequence.
    /// </summary>
    [pbr::OriginalName("RUNNING")] Running = 1,
    /// <summary>
    /// The previously running sequence reached its natural conclusion.
    /// </summary>
    [pbr::OriginalName("TERMINATED")] Terminated = 2,
    /// <summary>
    /// The sequence was interrupted by a reset.
    /// </summary>
    [pbr::OriginalName("INTERRUPTED")] Interrupted = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A potentially multi-dimensional array of data, laid out in row-major format.
  /// Note, only one data channel should be used at a time.
  /// </summary>
  public sealed partial class Tensor : pb::IMessage<Tensor> {
    private static readonly pb::MessageParser<Tensor> _parser = new pb::MessageParser<Tensor>(() => new Tensor());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tensor> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tensor() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tensor(Tensor other) : this() {
      shape_ = other.shape_.Clone();
      switch (other.PayloadCase) {
        case PayloadOneofCase.Floats:
          Floats = other.Floats.Clone();
          break;
        case PayloadOneofCase.Doubles:
          Doubles = other.Doubles.Clone();
          break;
        case PayloadOneofCase.Int8S:
          Int8S = other.Int8S.Clone();
          break;
        case PayloadOneofCase.Int32S:
          Int32S = other.Int32S.Clone();
          break;
        case PayloadOneofCase.Int64S:
          Int64S = other.Int64S.Clone();
          break;
        case PayloadOneofCase.Uint8S:
          Uint8S = other.Uint8S.Clone();
          break;
        case PayloadOneofCase.Uint32S:
          Uint32S = other.Uint32S.Clone();
          break;
        case PayloadOneofCase.Uint64S:
          Uint64S = other.Uint64S.Clone();
          break;
        case PayloadOneofCase.Bools:
          Bools = other.Bools.Clone();
          break;
        case PayloadOneofCase.Strings:
          Strings = other.Strings.Clone();
          break;
        case PayloadOneofCase.Protos:
          Protos = other.Protos.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tensor Clone() {
      return new Tensor(this);
    }

    /// <summary>Field number for the "floats" field.</summary>
    public const int FloatsFieldNumber = 1;
    /// <summary>
    /// LINT.IfChange(Tensor)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.FloatArray Floats {
      get { return payloadCase_ == PayloadOneofCase.Floats ? (global::DmEnvRpc.V1.Tensor.Types.FloatArray) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Floats;
      }
    }

    /// <summary>Field number for the "doubles" field.</summary>
    public const int DoublesFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.DoubleArray Doubles {
      get { return payloadCase_ == PayloadOneofCase.Doubles ? (global::DmEnvRpc.V1.Tensor.Types.DoubleArray) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Doubles;
      }
    }

    /// <summary>Field number for the "int8s" field.</summary>
    public const int Int8SFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.Int8Array Int8S {
      get { return payloadCase_ == PayloadOneofCase.Int8S ? (global::DmEnvRpc.V1.Tensor.Types.Int8Array) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Int8S;
      }
    }

    /// <summary>Field number for the "int32s" field.</summary>
    public const int Int32SFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.Int32Array Int32S {
      get { return payloadCase_ == PayloadOneofCase.Int32S ? (global::DmEnvRpc.V1.Tensor.Types.Int32Array) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Int32S;
      }
    }

    /// <summary>Field number for the "int64s" field.</summary>
    public const int Int64SFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.Int64Array Int64S {
      get { return payloadCase_ == PayloadOneofCase.Int64S ? (global::DmEnvRpc.V1.Tensor.Types.Int64Array) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Int64S;
      }
    }

    /// <summary>Field number for the "uint8s" field.</summary>
    public const int Uint8SFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.Uint8Array Uint8S {
      get { return payloadCase_ == PayloadOneofCase.Uint8S ? (global::DmEnvRpc.V1.Tensor.Types.Uint8Array) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Uint8S;
      }
    }

    /// <summary>Field number for the "uint32s" field.</summary>
    public const int Uint32SFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.Uint32Array Uint32S {
      get { return payloadCase_ == PayloadOneofCase.Uint32S ? (global::DmEnvRpc.V1.Tensor.Types.Uint32Array) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Uint32S;
      }
    }

    /// <summary>Field number for the "uint64s" field.</summary>
    public const int Uint64SFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.Uint64Array Uint64S {
      get { return payloadCase_ == PayloadOneofCase.Uint64S ? (global::DmEnvRpc.V1.Tensor.Types.Uint64Array) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Uint64S;
      }
    }

    /// <summary>Field number for the "bools" field.</summary>
    public const int BoolsFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.BoolArray Bools {
      get { return payloadCase_ == PayloadOneofCase.Bools ? (global::DmEnvRpc.V1.Tensor.Types.BoolArray) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Bools;
      }
    }

    /// <summary>Field number for the "strings" field.</summary>
    public const int StringsFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.StringArray Strings {
      get { return payloadCase_ == PayloadOneofCase.Strings ? (global::DmEnvRpc.V1.Tensor.Types.StringArray) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Strings;
      }
    }

    /// <summary>Field number for the "protos" field.</summary>
    public const int ProtosFieldNumber = 11;
    /// <summary>
    /// LINT.ThenChange(:DataType)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.Tensor.Types.ProtoArray Protos {
      get { return payloadCase_ == PayloadOneofCase.Protos ? (global::DmEnvRpc.V1.Tensor.Types.ProtoArray) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Protos;
      }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 15;
    private static readonly pb::FieldCodec<int> _repeated_shape_codec
        = pb::FieldCodec.ForInt32(122);
    private readonly pbc::RepeatedField<int> shape_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// The dimensions of the repeated data fields.  If empty, the data channel
    /// will be treated as a scalar and expected to have exactly one element.
    ///
    /// If the payload has exactly one element, it will be repeated to fill the
    /// shape.
    ///
    /// A negative element in a dimension indicates its size should be determined
    /// based on the number of elements in the payload and the rest of the shape.
    /// For instance, a shape of [-1, 5] means the shape is a matrix with 5 columns
    /// and a variable number of rows.  Only one element in the shape may be set to
    /// a negative value.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Shape {
      get { return shape_; }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      Floats = 1,
      Doubles = 2,
      Int8S = 3,
      Int32S = 4,
      Int64S = 5,
      Uint8S = 6,
      Uint32S = 7,
      Uint64S = 8,
      Bools = 9,
      Strings = 10,
      Protos = 11,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tensor);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tensor other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Floats, other.Floats)) return false;
      if (!object.Equals(Doubles, other.Doubles)) return false;
      if (!object.Equals(Int8S, other.Int8S)) return false;
      if (!object.Equals(Int32S, other.Int32S)) return false;
      if (!object.Equals(Int64S, other.Int64S)) return false;
      if (!object.Equals(Uint8S, other.Uint8S)) return false;
      if (!object.Equals(Uint32S, other.Uint32S)) return false;
      if (!object.Equals(Uint64S, other.Uint64S)) return false;
      if (!object.Equals(Bools, other.Bools)) return false;
      if (!object.Equals(Strings, other.Strings)) return false;
      if (!object.Equals(Protos, other.Protos)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.Floats) hash ^= Floats.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Doubles) hash ^= Doubles.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Int8S) hash ^= Int8S.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Int32S) hash ^= Int32S.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Int64S) hash ^= Int64S.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Uint8S) hash ^= Uint8S.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Uint32S) hash ^= Uint32S.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Uint64S) hash ^= Uint64S.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Bools) hash ^= Bools.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Strings) hash ^= Strings.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Protos) hash ^= Protos.GetHashCode();
      hash ^= shape_.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.Floats) {
        output.WriteRawTag(10);
        output.WriteMessage(Floats);
      }
      if (payloadCase_ == PayloadOneofCase.Doubles) {
        output.WriteRawTag(18);
        output.WriteMessage(Doubles);
      }
      if (payloadCase_ == PayloadOneofCase.Int8S) {
        output.WriteRawTag(26);
        output.WriteMessage(Int8S);
      }
      if (payloadCase_ == PayloadOneofCase.Int32S) {
        output.WriteRawTag(34);
        output.WriteMessage(Int32S);
      }
      if (payloadCase_ == PayloadOneofCase.Int64S) {
        output.WriteRawTag(42);
        output.WriteMessage(Int64S);
      }
      if (payloadCase_ == PayloadOneofCase.Uint8S) {
        output.WriteRawTag(50);
        output.WriteMessage(Uint8S);
      }
      if (payloadCase_ == PayloadOneofCase.Uint32S) {
        output.WriteRawTag(58);
        output.WriteMessage(Uint32S);
      }
      if (payloadCase_ == PayloadOneofCase.Uint64S) {
        output.WriteRawTag(66);
        output.WriteMessage(Uint64S);
      }
      if (payloadCase_ == PayloadOneofCase.Bools) {
        output.WriteRawTag(74);
        output.WriteMessage(Bools);
      }
      if (payloadCase_ == PayloadOneofCase.Strings) {
        output.WriteRawTag(82);
        output.WriteMessage(Strings);
      }
      if (payloadCase_ == PayloadOneofCase.Protos) {
        output.WriteRawTag(90);
        output.WriteMessage(Protos);
      }
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.Floats) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Floats);
      }
      if (payloadCase_ == PayloadOneofCase.Doubles) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Doubles);
      }
      if (payloadCase_ == PayloadOneofCase.Int8S) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Int8S);
      }
      if (payloadCase_ == PayloadOneofCase.Int32S) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Int32S);
      }
      if (payloadCase_ == PayloadOneofCase.Int64S) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Int64S);
      }
      if (payloadCase_ == PayloadOneofCase.Uint8S) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uint8S);
      }
      if (payloadCase_ == PayloadOneofCase.Uint32S) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uint32S);
      }
      if (payloadCase_ == PayloadOneofCase.Uint64S) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uint64S);
      }
      if (payloadCase_ == PayloadOneofCase.Bools) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bools);
      }
      if (payloadCase_ == PayloadOneofCase.Strings) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Strings);
      }
      if (payloadCase_ == PayloadOneofCase.Protos) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Protos);
      }
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tensor other) {
      if (other == null) {
        return;
      }
      shape_.Add(other.shape_);
      switch (other.PayloadCase) {
        case PayloadOneofCase.Floats:
          if (Floats == null) {
            Floats = new global::DmEnvRpc.V1.Tensor.Types.FloatArray();
          }
          Floats.MergeFrom(other.Floats);
          break;
        case PayloadOneofCase.Doubles:
          if (Doubles == null) {
            Doubles = new global::DmEnvRpc.V1.Tensor.Types.DoubleArray();
          }
          Doubles.MergeFrom(other.Doubles);
          break;
        case PayloadOneofCase.Int8S:
          if (Int8S == null) {
            Int8S = new global::DmEnvRpc.V1.Tensor.Types.Int8Array();
          }
          Int8S.MergeFrom(other.Int8S);
          break;
        case PayloadOneofCase.Int32S:
          if (Int32S == null) {
            Int32S = new global::DmEnvRpc.V1.Tensor.Types.Int32Array();
          }
          Int32S.MergeFrom(other.Int32S);
          break;
        case PayloadOneofCase.Int64S:
          if (Int64S == null) {
            Int64S = new global::DmEnvRpc.V1.Tensor.Types.Int64Array();
          }
          Int64S.MergeFrom(other.Int64S);
          break;
        case PayloadOneofCase.Uint8S:
          if (Uint8S == null) {
            Uint8S = new global::DmEnvRpc.V1.Tensor.Types.Uint8Array();
          }
          Uint8S.MergeFrom(other.Uint8S);
          break;
        case PayloadOneofCase.Uint32S:
          if (Uint32S == null) {
            Uint32S = new global::DmEnvRpc.V1.Tensor.Types.Uint32Array();
          }
          Uint32S.MergeFrom(other.Uint32S);
          break;
        case PayloadOneofCase.Uint64S:
          if (Uint64S == null) {
            Uint64S = new global::DmEnvRpc.V1.Tensor.Types.Uint64Array();
          }
          Uint64S.MergeFrom(other.Uint64S);
          break;
        case PayloadOneofCase.Bools:
          if (Bools == null) {
            Bools = new global::DmEnvRpc.V1.Tensor.Types.BoolArray();
          }
          Bools.MergeFrom(other.Bools);
          break;
        case PayloadOneofCase.Strings:
          if (Strings == null) {
            Strings = new global::DmEnvRpc.V1.Tensor.Types.StringArray();
          }
          Strings.MergeFrom(other.Strings);
          break;
        case PayloadOneofCase.Protos:
          if (Protos == null) {
            Protos = new global::DmEnvRpc.V1.Tensor.Types.ProtoArray();
          }
          Protos.MergeFrom(other.Protos);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::DmEnvRpc.V1.Tensor.Types.FloatArray subBuilder = new global::DmEnvRpc.V1.Tensor.Types.FloatArray();
            if (payloadCase_ == PayloadOneofCase.Floats) {
              subBuilder.MergeFrom(Floats);
            }
            input.ReadMessage(subBuilder);
            Floats = subBuilder;
            break;
          }
          case 18: {
            global::DmEnvRpc.V1.Tensor.Types.DoubleArray subBuilder = new global::DmEnvRpc.V1.Tensor.Types.DoubleArray();
            if (payloadCase_ == PayloadOneofCase.Doubles) {
              subBuilder.MergeFrom(Doubles);
            }
            input.ReadMessage(subBuilder);
            Doubles = subBuilder;
            break;
          }
          case 26: {
            global::DmEnvRpc.V1.Tensor.Types.Int8Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Int8Array();
            if (payloadCase_ == PayloadOneofCase.Int8S) {
              subBuilder.MergeFrom(Int8S);
            }
            input.ReadMessage(subBuilder);
            Int8S = subBuilder;
            break;
          }
          case 34: {
            global::DmEnvRpc.V1.Tensor.Types.Int32Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Int32Array();
            if (payloadCase_ == PayloadOneofCase.Int32S) {
              subBuilder.MergeFrom(Int32S);
            }
            input.ReadMessage(subBuilder);
            Int32S = subBuilder;
            break;
          }
          case 42: {
            global::DmEnvRpc.V1.Tensor.Types.Int64Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Int64Array();
            if (payloadCase_ == PayloadOneofCase.Int64S) {
              subBuilder.MergeFrom(Int64S);
            }
            input.ReadMessage(subBuilder);
            Int64S = subBuilder;
            break;
          }
          case 50: {
            global::DmEnvRpc.V1.Tensor.Types.Uint8Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Uint8Array();
            if (payloadCase_ == PayloadOneofCase.Uint8S) {
              subBuilder.MergeFrom(Uint8S);
            }
            input.ReadMessage(subBuilder);
            Uint8S = subBuilder;
            break;
          }
          case 58: {
            global::DmEnvRpc.V1.Tensor.Types.Uint32Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Uint32Array();
            if (payloadCase_ == PayloadOneofCase.Uint32S) {
              subBuilder.MergeFrom(Uint32S);
            }
            input.ReadMessage(subBuilder);
            Uint32S = subBuilder;
            break;
          }
          case 66: {
            global::DmEnvRpc.V1.Tensor.Types.Uint64Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Uint64Array();
            if (payloadCase_ == PayloadOneofCase.Uint64S) {
              subBuilder.MergeFrom(Uint64S);
            }
            input.ReadMessage(subBuilder);
            Uint64S = subBuilder;
            break;
          }
          case 74: {
            global::DmEnvRpc.V1.Tensor.Types.BoolArray subBuilder = new global::DmEnvRpc.V1.Tensor.Types.BoolArray();
            if (payloadCase_ == PayloadOneofCase.Bools) {
              subBuilder.MergeFrom(Bools);
            }
            input.ReadMessage(subBuilder);
            Bools = subBuilder;
            break;
          }
          case 82: {
            global::DmEnvRpc.V1.Tensor.Types.StringArray subBuilder = new global::DmEnvRpc.V1.Tensor.Types.StringArray();
            if (payloadCase_ == PayloadOneofCase.Strings) {
              subBuilder.MergeFrom(Strings);
            }
            input.ReadMessage(subBuilder);
            Strings = subBuilder;
            break;
          }
          case 90: {
            global::DmEnvRpc.V1.Tensor.Types.ProtoArray subBuilder = new global::DmEnvRpc.V1.Tensor.Types.ProtoArray();
            if (payloadCase_ == PayloadOneofCase.Protos) {
              subBuilder.MergeFrom(Protos);
            }
            input.ReadMessage(subBuilder);
            Protos = subBuilder;
            break;
          }
          case 122:
          case 120: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Tensor message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Int8Array : pb::IMessage<Int8Array> {
        private static readonly pb::MessageParser<Int8Array> _parser = new pb::MessageParser<Int8Array>(() => new Int8Array());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Int8Array> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Int8Array() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Int8Array(Int8Array other) : this() {
          array_ = other.array_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Int8Array Clone() {
          return new Int8Array(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private pb::ByteString array_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Array {
          get { return array_; }
          set {
            array_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Int8Array);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Int8Array other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Array != other.Array) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Array.Length != 0) hash ^= Array.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Array.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Array);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Array.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Array);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Int8Array other) {
          if (other == null) {
            return;
          }
          if (other.Array.Length != 0) {
            Array = other.Array;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Array = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Int32Array : pb::IMessage<Int32Array> {
        private static readonly pb::MessageParser<Int32Array> _parser = new pb::MessageParser<Int32Array>(() => new Int32Array());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Int32Array> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Int32Array() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Int32Array(Int32Array other) : this() {
          array_ = other.array_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Int32Array Clone() {
          return new Int32Array(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private static readonly pb::FieldCodec<int> _repeated_array_codec
            = pb::FieldCodec.ForInt32(10);
        private readonly pbc::RepeatedField<int> array_ = new pbc::RepeatedField<int>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<int> Array {
          get { return array_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Int32Array);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Int32Array other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!array_.Equals(other.array_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= array_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          array_.WriteTo(output, _repeated_array_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += array_.CalculateSize(_repeated_array_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Int32Array other) {
          if (other == null) {
            return;
          }
          array_.Add(other.array_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                array_.AddEntriesFrom(input, _repeated_array_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Int64Array : pb::IMessage<Int64Array> {
        private static readonly pb::MessageParser<Int64Array> _parser = new pb::MessageParser<Int64Array>(() => new Int64Array());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Int64Array> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Int64Array() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Int64Array(Int64Array other) : this() {
          array_ = other.array_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Int64Array Clone() {
          return new Int64Array(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private static readonly pb::FieldCodec<long> _repeated_array_codec
            = pb::FieldCodec.ForInt64(10);
        private readonly pbc::RepeatedField<long> array_ = new pbc::RepeatedField<long>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<long> Array {
          get { return array_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Int64Array);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Int64Array other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!array_.Equals(other.array_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= array_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          array_.WriteTo(output, _repeated_array_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += array_.CalculateSize(_repeated_array_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Int64Array other) {
          if (other == null) {
            return;
          }
          array_.Add(other.array_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                array_.AddEntriesFrom(input, _repeated_array_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Uint8Array : pb::IMessage<Uint8Array> {
        private static readonly pb::MessageParser<Uint8Array> _parser = new pb::MessageParser<Uint8Array>(() => new Uint8Array());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Uint8Array> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Uint8Array() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Uint8Array(Uint8Array other) : this() {
          array_ = other.array_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Uint8Array Clone() {
          return new Uint8Array(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private pb::ByteString array_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Array {
          get { return array_; }
          set {
            array_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Uint8Array);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Uint8Array other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Array != other.Array) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Array.Length != 0) hash ^= Array.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Array.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Array);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Array.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Array);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Uint8Array other) {
          if (other == null) {
            return;
          }
          if (other.Array.Length != 0) {
            Array = other.Array;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Array = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

      public sealed partial class Uint32Array : pb::IMessage<Uint32Array> {
        private static readonly pb::MessageParser<Uint32Array> _parser = new pb::MessageParser<Uint32Array>(() => new Uint32Array());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Uint32Array> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Uint32Array() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Uint32Array(Uint32Array other) : this() {
          array_ = other.array_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Uint32Array Clone() {
          return new Uint32Array(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private static readonly pb::FieldCodec<uint> _repeated_array_codec
            = pb::FieldCodec.ForUInt32(10);
        private readonly pbc::RepeatedField<uint> array_ = new pbc::RepeatedField<uint>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<uint> Array {
          get { return array_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Uint32Array);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Uint32Array other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!array_.Equals(other.array_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= array_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          array_.WriteTo(output, _repeated_array_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += array_.CalculateSize(_repeated_array_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Uint32Array other) {
          if (other == null) {
            return;
          }
          array_.Add(other.array_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                array_.AddEntriesFrom(input, _repeated_array_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class Uint64Array : pb::IMessage<Uint64Array> {
        private static readonly pb::MessageParser<Uint64Array> _parser = new pb::MessageParser<Uint64Array>(() => new Uint64Array());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Uint64Array> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[5]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Uint64Array() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Uint64Array(Uint64Array other) : this() {
          array_ = other.array_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Uint64Array Clone() {
          return new Uint64Array(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private static readonly pb::FieldCodec<ulong> _repeated_array_codec
            = pb::FieldCodec.ForUInt64(10);
        private readonly pbc::RepeatedField<ulong> array_ = new pbc::RepeatedField<ulong>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<ulong> Array {
          get { return array_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Uint64Array);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Uint64Array other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!array_.Equals(other.array_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= array_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          array_.WriteTo(output, _repeated_array_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += array_.CalculateSize(_repeated_array_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Uint64Array other) {
          if (other == null) {
            return;
          }
          array_.Add(other.array_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                array_.AddEntriesFrom(input, _repeated_array_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class FloatArray : pb::IMessage<FloatArray> {
        private static readonly pb::MessageParser<FloatArray> _parser = new pb::MessageParser<FloatArray>(() => new FloatArray());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FloatArray> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[6]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FloatArray() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FloatArray(FloatArray other) : this() {
          array_ = other.array_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FloatArray Clone() {
          return new FloatArray(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private static readonly pb::FieldCodec<float> _repeated_array_codec
            = pb::FieldCodec.ForFloat(10);
        private readonly pbc::RepeatedField<float> array_ = new pbc::RepeatedField<float>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<float> Array {
          get { return array_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FloatArray);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FloatArray other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!array_.Equals(other.array_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= array_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          array_.WriteTo(output, _repeated_array_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += array_.CalculateSize(_repeated_array_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FloatArray other) {
          if (other == null) {
            return;
          }
          array_.Add(other.array_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 13: {
                array_.AddEntriesFrom(input, _repeated_array_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class DoubleArray : pb::IMessage<DoubleArray> {
        private static readonly pb::MessageParser<DoubleArray> _parser = new pb::MessageParser<DoubleArray>(() => new DoubleArray());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<DoubleArray> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[7]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DoubleArray() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DoubleArray(DoubleArray other) : this() {
          array_ = other.array_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public DoubleArray Clone() {
          return new DoubleArray(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private static readonly pb::FieldCodec<double> _repeated_array_codec
            = pb::FieldCodec.ForDouble(10);
        private readonly pbc::RepeatedField<double> array_ = new pbc::RepeatedField<double>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<double> Array {
          get { return array_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as DoubleArray);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(DoubleArray other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!array_.Equals(other.array_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= array_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          array_.WriteTo(output, _repeated_array_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += array_.CalculateSize(_repeated_array_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(DoubleArray other) {
          if (other == null) {
            return;
          }
          array_.Add(other.array_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 9: {
                array_.AddEntriesFrom(input, _repeated_array_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class BoolArray : pb::IMessage<BoolArray> {
        private static readonly pb::MessageParser<BoolArray> _parser = new pb::MessageParser<BoolArray>(() => new BoolArray());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BoolArray> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[8]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BoolArray() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BoolArray(BoolArray other) : this() {
          array_ = other.array_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BoolArray Clone() {
          return new BoolArray(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private static readonly pb::FieldCodec<bool> _repeated_array_codec
            = pb::FieldCodec.ForBool(10);
        private readonly pbc::RepeatedField<bool> array_ = new pbc::RepeatedField<bool>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<bool> Array {
          get { return array_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BoolArray);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BoolArray other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!array_.Equals(other.array_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= array_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          array_.WriteTo(output, _repeated_array_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += array_.CalculateSize(_repeated_array_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BoolArray other) {
          if (other == null) {
            return;
          }
          array_.Add(other.array_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10:
              case 8: {
                array_.AddEntriesFrom(input, _repeated_array_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class StringArray : pb::IMessage<StringArray> {
        private static readonly pb::MessageParser<StringArray> _parser = new pb::MessageParser<StringArray>(() => new StringArray());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<StringArray> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[9]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringArray() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringArray(StringArray other) : this() {
          array_ = other.array_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public StringArray Clone() {
          return new StringArray(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private static readonly pb::FieldCodec<string> _repeated_array_codec
            = pb::FieldCodec.ForString(10);
        private readonly pbc::RepeatedField<string> array_ = new pbc::RepeatedField<string>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<string> Array {
          get { return array_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as StringArray);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(StringArray other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!array_.Equals(other.array_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= array_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          array_.WriteTo(output, _repeated_array_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += array_.CalculateSize(_repeated_array_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(StringArray other) {
          if (other == null) {
            return;
          }
          array_.Add(other.array_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                array_.AddEntriesFrom(input, _repeated_array_codec);
                break;
              }
            }
          }
        }

      }

      public sealed partial class ProtoArray : pb::IMessage<ProtoArray> {
        private static readonly pb::MessageParser<ProtoArray> _parser = new pb::MessageParser<ProtoArray>(() => new ProtoArray());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ProtoArray> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.Tensor.Descriptor.NestedTypes[10]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProtoArray() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProtoArray(ProtoArray other) : this() {
          array_ = other.array_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ProtoArray Clone() {
          return new ProtoArray(this);
        }

        /// <summary>Field number for the "array" field.</summary>
        public const int ArrayFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Google.Protobuf.WellKnownTypes.Any> _repeated_array_codec
            = pb::FieldCodec.ForMessage(10, global::Google.Protobuf.WellKnownTypes.Any.Parser);
        private readonly pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> array_ = new pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Google.Protobuf.WellKnownTypes.Any> Array {
          get { return array_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ProtoArray);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ProtoArray other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!array_.Equals(other.array_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= array_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          array_.WriteTo(output, _repeated_array_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += array_.CalculateSize(_repeated_array_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ProtoArray other) {
          if (other == null) {
            return;
          }
          array_.Add(other.array_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                array_.AddEntriesFrom(input, _repeated_array_codec);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TensorSpec : pb::IMessage<TensorSpec> {
    private static readonly pb::MessageParser<TensorSpec> _parser = new pb::MessageParser<TensorSpec>(() => new TensorSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TensorSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorSpec(TensorSpec other) : this() {
      name_ = other.name_;
      shape_ = other.shape_.Clone();
      dtype_ = other.dtype_;
      min_ = other.min_ != null ? other.min_.Clone() : null;
      max_ = other.max_ != null ? other.max_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TensorSpec Clone() {
      return new TensorSpec(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// A human-readable name describing this tensor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_shape_codec
        = pb::FieldCodec.ForInt32(18);
    private readonly pbc::RepeatedField<int> shape_ = new pbc::RepeatedField<int>();
    /// <summary>
    /// The dimensionality of the tensor.  See Tensor.shape for more information.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Shape {
      get { return shape_; }
    }

    /// <summary>Field number for the "dtype" field.</summary>
    public const int DtypeFieldNumber = 3;
    private global::DmEnvRpc.V1.DataType dtype_ = 0;
    /// <summary>
    /// The data type of the elements in the tensor.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.DataType Dtype {
      get { return dtype_; }
      set {
        dtype_ = value;
      }
    }

    /// <summary>Field number for the "min" field.</summary>
    public const int MinFieldNumber = 4;
    private global::DmEnvRpc.V1.TensorSpec.Types.Value min_;
    /// <summary>
    /// The minimum value that elements in the tensor can obtain.  Inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.TensorSpec.Types.Value Min {
      get { return min_; }
      set {
        min_ = value;
      }
    }

    /// <summary>Field number for the "max" field.</summary>
    public const int MaxFieldNumber = 5;
    private global::DmEnvRpc.V1.TensorSpec.Types.Value max_;
    /// <summary>
    /// The maximum value that elements in the tensor can obtain.  Inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.TensorSpec.Types.Value Max {
      get { return max_; }
      set {
        max_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TensorSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TensorSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!shape_.Equals(other.shape_)) return false;
      if (Dtype != other.Dtype) return false;
      if (!object.Equals(Min, other.Min)) return false;
      if (!object.Equals(Max, other.Max)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (Dtype != 0) hash ^= Dtype.GetHashCode();
      if (min_ != null) hash ^= Min.GetHashCode();
      if (max_ != null) hash ^= Max.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      shape_.WriteTo(output, _repeated_shape_codec);
      if (Dtype != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Dtype);
      }
      if (min_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Min);
      }
      if (max_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Max);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (Dtype != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Dtype);
      }
      if (min_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Min);
      }
      if (max_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Max);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TensorSpec other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      shape_.Add(other.shape_);
      if (other.Dtype != 0) {
        Dtype = other.Dtype;
      }
      if (other.min_ != null) {
        if (min_ == null) {
          Min = new global::DmEnvRpc.V1.TensorSpec.Types.Value();
        }
        Min.MergeFrom(other.Min);
      }
      if (other.max_ != null) {
        if (max_ == null) {
          Max = new global::DmEnvRpc.V1.TensorSpec.Types.Value();
        }
        Max.MergeFrom(other.Max);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
          case 24: {
            Dtype = (global::DmEnvRpc.V1.DataType) input.ReadEnum();
            break;
          }
          case 34: {
            if (min_ == null) {
              Min = new global::DmEnvRpc.V1.TensorSpec.Types.Value();
            }
            input.ReadMessage(Min);
            break;
          }
          case 42: {
            if (max_ == null) {
              Max = new global::DmEnvRpc.V1.TensorSpec.Types.Value();
            }
            input.ReadMessage(Max);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TensorSpec message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// Value sub-message that defines the inclusive min/max bounds for numerical
      /// types.
      /// </summary>
      public sealed partial class Value : pb::IMessage<Value> {
        private static readonly pb::MessageParser<Value> _parser = new pb::MessageParser<Value>(() => new Value());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Value> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DmEnvRpc.V1.TensorSpec.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Value() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Value(Value other) : this() {
          switch (other.PayloadCase) {
            case PayloadOneofCase.Floats:
              Floats = other.Floats.Clone();
              break;
            case PayloadOneofCase.Doubles:
              Doubles = other.Doubles.Clone();
              break;
            case PayloadOneofCase.Int8S:
              Int8S = other.Int8S.Clone();
              break;
            case PayloadOneofCase.Int32S:
              Int32S = other.Int32S.Clone();
              break;
            case PayloadOneofCase.Int64S:
              Int64S = other.Int64S.Clone();
              break;
            case PayloadOneofCase.Uint8S:
              Uint8S = other.Uint8S.Clone();
              break;
            case PayloadOneofCase.Uint32S:
              Uint32S = other.Uint32S.Clone();
              break;
            case PayloadOneofCase.Uint64S:
              Uint64S = other.Uint64S.Clone();
              break;
          }

          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Value Clone() {
          return new Value(this);
        }

        /// <summary>Field number for the "floats" field.</summary>
        public const int FloatsFieldNumber = 9;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DmEnvRpc.V1.Tensor.Types.FloatArray Floats {
          get { return payloadCase_ == PayloadOneofCase.Floats ? (global::DmEnvRpc.V1.Tensor.Types.FloatArray) payload_ : null; }
          set {
            payload_ = value;
            payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Floats;
          }
        }

        /// <summary>Field number for the "doubles" field.</summary>
        public const int DoublesFieldNumber = 10;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DmEnvRpc.V1.Tensor.Types.DoubleArray Doubles {
          get { return payloadCase_ == PayloadOneofCase.Doubles ? (global::DmEnvRpc.V1.Tensor.Types.DoubleArray) payload_ : null; }
          set {
            payload_ = value;
            payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Doubles;
          }
        }

        /// <summary>Field number for the "int8s" field.</summary>
        public const int Int8SFieldNumber = 11;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DmEnvRpc.V1.Tensor.Types.Int8Array Int8S {
          get { return payloadCase_ == PayloadOneofCase.Int8S ? (global::DmEnvRpc.V1.Tensor.Types.Int8Array) payload_ : null; }
          set {
            payload_ = value;
            payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Int8S;
          }
        }

        /// <summary>Field number for the "int32s" field.</summary>
        public const int Int32SFieldNumber = 12;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DmEnvRpc.V1.Tensor.Types.Int32Array Int32S {
          get { return payloadCase_ == PayloadOneofCase.Int32S ? (global::DmEnvRpc.V1.Tensor.Types.Int32Array) payload_ : null; }
          set {
            payload_ = value;
            payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Int32S;
          }
        }

        /// <summary>Field number for the "int64s" field.</summary>
        public const int Int64SFieldNumber = 13;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DmEnvRpc.V1.Tensor.Types.Int64Array Int64S {
          get { return payloadCase_ == PayloadOneofCase.Int64S ? (global::DmEnvRpc.V1.Tensor.Types.Int64Array) payload_ : null; }
          set {
            payload_ = value;
            payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Int64S;
          }
        }

        /// <summary>Field number for the "uint8s" field.</summary>
        public const int Uint8SFieldNumber = 14;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DmEnvRpc.V1.Tensor.Types.Uint8Array Uint8S {
          get { return payloadCase_ == PayloadOneofCase.Uint8S ? (global::DmEnvRpc.V1.Tensor.Types.Uint8Array) payload_ : null; }
          set {
            payload_ = value;
            payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Uint8S;
          }
        }

        /// <summary>Field number for the "uint32s" field.</summary>
        public const int Uint32SFieldNumber = 15;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DmEnvRpc.V1.Tensor.Types.Uint32Array Uint32S {
          get { return payloadCase_ == PayloadOneofCase.Uint32S ? (global::DmEnvRpc.V1.Tensor.Types.Uint32Array) payload_ : null; }
          set {
            payload_ = value;
            payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Uint32S;
          }
        }

        /// <summary>Field number for the "uint64s" field.</summary>
        public const int Uint64SFieldNumber = 16;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::DmEnvRpc.V1.Tensor.Types.Uint64Array Uint64S {
          get { return payloadCase_ == PayloadOneofCase.Uint64S ? (global::DmEnvRpc.V1.Tensor.Types.Uint64Array) payload_ : null; }
          set {
            payload_ = value;
            payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Uint64S;
          }
        }

        private object payload_;
        /// <summary>Enum of possible cases for the "payload" oneof.</summary>
        public enum PayloadOneofCase {
          None = 0,
          Floats = 9,
          Doubles = 10,
          Int8S = 11,
          Int32S = 12,
          Int64S = 13,
          Uint8S = 14,
          Uint32S = 15,
          Uint64S = 16,
        }
        private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public PayloadOneofCase PayloadCase {
          get { return payloadCase_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void ClearPayload() {
          payloadCase_ = PayloadOneofCase.None;
          payload_ = null;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Value);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Value other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Floats, other.Floats)) return false;
          if (!object.Equals(Doubles, other.Doubles)) return false;
          if (!object.Equals(Int8S, other.Int8S)) return false;
          if (!object.Equals(Int32S, other.Int32S)) return false;
          if (!object.Equals(Int64S, other.Int64S)) return false;
          if (!object.Equals(Uint8S, other.Uint8S)) return false;
          if (!object.Equals(Uint32S, other.Uint32S)) return false;
          if (!object.Equals(Uint64S, other.Uint64S)) return false;
          if (PayloadCase != other.PayloadCase) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (payloadCase_ == PayloadOneofCase.Floats) hash ^= Floats.GetHashCode();
          if (payloadCase_ == PayloadOneofCase.Doubles) hash ^= Doubles.GetHashCode();
          if (payloadCase_ == PayloadOneofCase.Int8S) hash ^= Int8S.GetHashCode();
          if (payloadCase_ == PayloadOneofCase.Int32S) hash ^= Int32S.GetHashCode();
          if (payloadCase_ == PayloadOneofCase.Int64S) hash ^= Int64S.GetHashCode();
          if (payloadCase_ == PayloadOneofCase.Uint8S) hash ^= Uint8S.GetHashCode();
          if (payloadCase_ == PayloadOneofCase.Uint32S) hash ^= Uint32S.GetHashCode();
          if (payloadCase_ == PayloadOneofCase.Uint64S) hash ^= Uint64S.GetHashCode();
          hash ^= (int) payloadCase_;
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (payloadCase_ == PayloadOneofCase.Floats) {
            output.WriteRawTag(74);
            output.WriteMessage(Floats);
          }
          if (payloadCase_ == PayloadOneofCase.Doubles) {
            output.WriteRawTag(82);
            output.WriteMessage(Doubles);
          }
          if (payloadCase_ == PayloadOneofCase.Int8S) {
            output.WriteRawTag(90);
            output.WriteMessage(Int8S);
          }
          if (payloadCase_ == PayloadOneofCase.Int32S) {
            output.WriteRawTag(98);
            output.WriteMessage(Int32S);
          }
          if (payloadCase_ == PayloadOneofCase.Int64S) {
            output.WriteRawTag(106);
            output.WriteMessage(Int64S);
          }
          if (payloadCase_ == PayloadOneofCase.Uint8S) {
            output.WriteRawTag(114);
            output.WriteMessage(Uint8S);
          }
          if (payloadCase_ == PayloadOneofCase.Uint32S) {
            output.WriteRawTag(122);
            output.WriteMessage(Uint32S);
          }
          if (payloadCase_ == PayloadOneofCase.Uint64S) {
            output.WriteRawTag(130, 1);
            output.WriteMessage(Uint64S);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (payloadCase_ == PayloadOneofCase.Floats) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Floats);
          }
          if (payloadCase_ == PayloadOneofCase.Doubles) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Doubles);
          }
          if (payloadCase_ == PayloadOneofCase.Int8S) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Int8S);
          }
          if (payloadCase_ == PayloadOneofCase.Int32S) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Int32S);
          }
          if (payloadCase_ == PayloadOneofCase.Int64S) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Int64S);
          }
          if (payloadCase_ == PayloadOneofCase.Uint8S) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uint8S);
          }
          if (payloadCase_ == PayloadOneofCase.Uint32S) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Uint32S);
          }
          if (payloadCase_ == PayloadOneofCase.Uint64S) {
            size += 2 + pb::CodedOutputStream.ComputeMessageSize(Uint64S);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Value other) {
          if (other == null) {
            return;
          }
          switch (other.PayloadCase) {
            case PayloadOneofCase.Floats:
              if (Floats == null) {
                Floats = new global::DmEnvRpc.V1.Tensor.Types.FloatArray();
              }
              Floats.MergeFrom(other.Floats);
              break;
            case PayloadOneofCase.Doubles:
              if (Doubles == null) {
                Doubles = new global::DmEnvRpc.V1.Tensor.Types.DoubleArray();
              }
              Doubles.MergeFrom(other.Doubles);
              break;
            case PayloadOneofCase.Int8S:
              if (Int8S == null) {
                Int8S = new global::DmEnvRpc.V1.Tensor.Types.Int8Array();
              }
              Int8S.MergeFrom(other.Int8S);
              break;
            case PayloadOneofCase.Int32S:
              if (Int32S == null) {
                Int32S = new global::DmEnvRpc.V1.Tensor.Types.Int32Array();
              }
              Int32S.MergeFrom(other.Int32S);
              break;
            case PayloadOneofCase.Int64S:
              if (Int64S == null) {
                Int64S = new global::DmEnvRpc.V1.Tensor.Types.Int64Array();
              }
              Int64S.MergeFrom(other.Int64S);
              break;
            case PayloadOneofCase.Uint8S:
              if (Uint8S == null) {
                Uint8S = new global::DmEnvRpc.V1.Tensor.Types.Uint8Array();
              }
              Uint8S.MergeFrom(other.Uint8S);
              break;
            case PayloadOneofCase.Uint32S:
              if (Uint32S == null) {
                Uint32S = new global::DmEnvRpc.V1.Tensor.Types.Uint32Array();
              }
              Uint32S.MergeFrom(other.Uint32S);
              break;
            case PayloadOneofCase.Uint64S:
              if (Uint64S == null) {
                Uint64S = new global::DmEnvRpc.V1.Tensor.Types.Uint64Array();
              }
              Uint64S.MergeFrom(other.Uint64S);
              break;
          }

          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 74: {
                global::DmEnvRpc.V1.Tensor.Types.FloatArray subBuilder = new global::DmEnvRpc.V1.Tensor.Types.FloatArray();
                if (payloadCase_ == PayloadOneofCase.Floats) {
                  subBuilder.MergeFrom(Floats);
                }
                input.ReadMessage(subBuilder);
                Floats = subBuilder;
                break;
              }
              case 82: {
                global::DmEnvRpc.V1.Tensor.Types.DoubleArray subBuilder = new global::DmEnvRpc.V1.Tensor.Types.DoubleArray();
                if (payloadCase_ == PayloadOneofCase.Doubles) {
                  subBuilder.MergeFrom(Doubles);
                }
                input.ReadMessage(subBuilder);
                Doubles = subBuilder;
                break;
              }
              case 90: {
                global::DmEnvRpc.V1.Tensor.Types.Int8Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Int8Array();
                if (payloadCase_ == PayloadOneofCase.Int8S) {
                  subBuilder.MergeFrom(Int8S);
                }
                input.ReadMessage(subBuilder);
                Int8S = subBuilder;
                break;
              }
              case 98: {
                global::DmEnvRpc.V1.Tensor.Types.Int32Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Int32Array();
                if (payloadCase_ == PayloadOneofCase.Int32S) {
                  subBuilder.MergeFrom(Int32S);
                }
                input.ReadMessage(subBuilder);
                Int32S = subBuilder;
                break;
              }
              case 106: {
                global::DmEnvRpc.V1.Tensor.Types.Int64Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Int64Array();
                if (payloadCase_ == PayloadOneofCase.Int64S) {
                  subBuilder.MergeFrom(Int64S);
                }
                input.ReadMessage(subBuilder);
                Int64S = subBuilder;
                break;
              }
              case 114: {
                global::DmEnvRpc.V1.Tensor.Types.Uint8Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Uint8Array();
                if (payloadCase_ == PayloadOneofCase.Uint8S) {
                  subBuilder.MergeFrom(Uint8S);
                }
                input.ReadMessage(subBuilder);
                Uint8S = subBuilder;
                break;
              }
              case 122: {
                global::DmEnvRpc.V1.Tensor.Types.Uint32Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Uint32Array();
                if (payloadCase_ == PayloadOneofCase.Uint32S) {
                  subBuilder.MergeFrom(Uint32S);
                }
                input.ReadMessage(subBuilder);
                Uint32S = subBuilder;
                break;
              }
              case 130: {
                global::DmEnvRpc.V1.Tensor.Types.Uint64Array subBuilder = new global::DmEnvRpc.V1.Tensor.Types.Uint64Array();
                if (payloadCase_ == PayloadOneofCase.Uint64S) {
                  subBuilder.MergeFrom(Uint64S);
                }
                input.ReadMessage(subBuilder);
                Uint64S = subBuilder;
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class CreateWorldRequest : pb::IMessage<CreateWorldRequest> {
    private static readonly pb::MessageParser<CreateWorldRequest> _parser = new pb::MessageParser<CreateWorldRequest>(() => new CreateWorldRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateWorldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorldRequest(CreateWorldRequest other) : this() {
      settings_ = other.settings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorldRequest Clone() {
      return new CreateWorldRequest(this);
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::DmEnvRpc.V1.Tensor>.Codec _map_settings_codec
        = new pbc::MapField<string, global::DmEnvRpc.V1.Tensor>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::DmEnvRpc.V1.Tensor.Parser), 10);
    private readonly pbc::MapField<string, global::DmEnvRpc.V1.Tensor> settings_ = new pbc::MapField<string, global::DmEnvRpc.V1.Tensor>();
    /// <summary>
    /// Settings to create the world with.  This can define the level layout, the
    /// number of agents, the goal or game mode, or other universal settings.
    /// Agent-specific settings, such as anything which would change the action or
    /// observation spec, should go in the JoinWorldRequest.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::DmEnvRpc.V1.Tensor> Settings {
      get { return settings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateWorldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateWorldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Settings.Equals(other.Settings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Settings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      settings_.WriteTo(output, _map_settings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += settings_.CalculateSize(_map_settings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateWorldRequest other) {
      if (other == null) {
        return;
      }
      settings_.Add(other.settings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            settings_.AddEntriesFrom(input, _map_settings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateWorldResponse : pb::IMessage<CreateWorldResponse> {
    private static readonly pb::MessageParser<CreateWorldResponse> _parser = new pb::MessageParser<CreateWorldResponse>(() => new CreateWorldResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateWorldResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorldResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorldResponse(CreateWorldResponse other) : this() {
      worldName_ = other.worldName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateWorldResponse Clone() {
      return new CreateWorldResponse(this);
    }

    /// <summary>Field number for the "world_name" field.</summary>
    public const int WorldNameFieldNumber = 1;
    private string worldName_ = "";
    /// <summary>
    /// The unique name for the world just created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorldName {
      get { return worldName_; }
      set {
        worldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateWorldResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateWorldResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldName != other.WorldName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldName.Length != 0) hash ^= WorldName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorldName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorldName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateWorldResponse other) {
      if (other == null) {
        return;
      }
      if (other.WorldName.Length != 0) {
        WorldName = other.WorldName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorldName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ActionObservationSpecs : pb::IMessage<ActionObservationSpecs> {
    private static readonly pb::MessageParser<ActionObservationSpecs> _parser = new pb::MessageParser<ActionObservationSpecs>(() => new ActionObservationSpecs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ActionObservationSpecs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionObservationSpecs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionObservationSpecs(ActionObservationSpecs other) : this() {
      actions_ = other.actions_.Clone();
      observations_ = other.observations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ActionObservationSpecs Clone() {
      return new ActionObservationSpecs(this);
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 1;
    private static readonly pbc::MapField<ulong, global::DmEnvRpc.V1.TensorSpec>.Codec _map_actions_codec
        = new pbc::MapField<ulong, global::DmEnvRpc.V1.TensorSpec>.Codec(pb::FieldCodec.ForUInt64(8), pb::FieldCodec.ForMessage(18, global::DmEnvRpc.V1.TensorSpec.Parser), 10);
    private readonly pbc::MapField<ulong, global::DmEnvRpc.V1.TensorSpec> actions_ = new pbc::MapField<ulong, global::DmEnvRpc.V1.TensorSpec>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<ulong, global::DmEnvRpc.V1.TensorSpec> Actions {
      get { return actions_; }
    }

    /// <summary>Field number for the "observations" field.</summary>
    public const int ObservationsFieldNumber = 2;
    private static readonly pbc::MapField<ulong, global::DmEnvRpc.V1.TensorSpec>.Codec _map_observations_codec
        = new pbc::MapField<ulong, global::DmEnvRpc.V1.TensorSpec>.Codec(pb::FieldCodec.ForUInt64(8), pb::FieldCodec.ForMessage(18, global::DmEnvRpc.V1.TensorSpec.Parser), 18);
    private readonly pbc::MapField<ulong, global::DmEnvRpc.V1.TensorSpec> observations_ = new pbc::MapField<ulong, global::DmEnvRpc.V1.TensorSpec>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<ulong, global::DmEnvRpc.V1.TensorSpec> Observations {
      get { return observations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ActionObservationSpecs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ActionObservationSpecs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Actions.Equals(other.Actions)) return false;
      if (!Observations.Equals(other.Observations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Actions.GetHashCode();
      hash ^= Observations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      actions_.WriteTo(output, _map_actions_codec);
      observations_.WriteTo(output, _map_observations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += actions_.CalculateSize(_map_actions_codec);
      size += observations_.CalculateSize(_map_observations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ActionObservationSpecs other) {
      if (other == null) {
        return;
      }
      actions_.Add(other.actions_);
      observations_.Add(other.observations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            actions_.AddEntriesFrom(input, _map_actions_codec);
            break;
          }
          case 18: {
            observations_.AddEntriesFrom(input, _map_observations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinWorldRequest : pb::IMessage<JoinWorldRequest> {
    private static readonly pb::MessageParser<JoinWorldRequest> _parser = new pb::MessageParser<JoinWorldRequest>(() => new JoinWorldRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinWorldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinWorldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinWorldRequest(JoinWorldRequest other) : this() {
      worldName_ = other.worldName_;
      settings_ = other.settings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinWorldRequest Clone() {
      return new JoinWorldRequest(this);
    }

    /// <summary>Field number for the "world_name" field.</summary>
    public const int WorldNameFieldNumber = 1;
    private string worldName_ = "";
    /// <summary>
    /// The name of the world to join.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorldName {
      get { return worldName_; }
      set {
        worldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::DmEnvRpc.V1.Tensor>.Codec _map_settings_codec
        = new pbc::MapField<string, global::DmEnvRpc.V1.Tensor>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::DmEnvRpc.V1.Tensor.Parser), 18);
    private readonly pbc::MapField<string, global::DmEnvRpc.V1.Tensor> settings_ = new pbc::MapField<string, global::DmEnvRpc.V1.Tensor>();
    /// <summary>
    /// Agent-specific settings which define how to join the world, such as agent
    /// name and class in an RPG.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::DmEnvRpc.V1.Tensor> Settings {
      get { return settings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinWorldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinWorldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldName != other.WorldName) return false;
      if (!Settings.Equals(other.Settings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldName.Length != 0) hash ^= WorldName.GetHashCode();
      hash ^= Settings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorldName);
      }
      settings_.WriteTo(output, _map_settings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorldName);
      }
      size += settings_.CalculateSize(_map_settings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinWorldRequest other) {
      if (other == null) {
        return;
      }
      if (other.WorldName.Length != 0) {
        WorldName = other.WorldName;
      }
      settings_.Add(other.settings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorldName = input.ReadString();
            break;
          }
          case 18: {
            settings_.AddEntriesFrom(input, _map_settings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class JoinWorldResponse : pb::IMessage<JoinWorldResponse> {
    private static readonly pb::MessageParser<JoinWorldResponse> _parser = new pb::MessageParser<JoinWorldResponse>(() => new JoinWorldResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<JoinWorldResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinWorldResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinWorldResponse(JoinWorldResponse other) : this() {
      specs_ = other.specs_ != null ? other.specs_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public JoinWorldResponse Clone() {
      return new JoinWorldResponse(this);
    }

    /// <summary>Field number for the "specs" field.</summary>
    public const int SpecsFieldNumber = 1;
    private global::DmEnvRpc.V1.ActionObservationSpecs specs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.ActionObservationSpecs Specs {
      get { return specs_; }
      set {
        specs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as JoinWorldResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(JoinWorldResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Specs, other.Specs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (specs_ != null) hash ^= Specs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (specs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Specs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (specs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Specs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(JoinWorldResponse other) {
      if (other == null) {
        return;
      }
      if (other.specs_ != null) {
        if (specs_ == null) {
          Specs = new global::DmEnvRpc.V1.ActionObservationSpecs();
        }
        Specs.MergeFrom(other.Specs);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (specs_ == null) {
              Specs = new global::DmEnvRpc.V1.ActionObservationSpecs();
            }
            input.ReadMessage(Specs);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StepRequest : pb::IMessage<StepRequest> {
    private static readonly pb::MessageParser<StepRequest> _parser = new pb::MessageParser<StepRequest>(() => new StepRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepRequest(StepRequest other) : this() {
      actions_ = other.actions_.Clone();
      requestedObservations_ = other.requestedObservations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepRequest Clone() {
      return new StepRequest(this);
    }

    /// <summary>Field number for the "actions" field.</summary>
    public const int ActionsFieldNumber = 1;
    private static readonly pbc::MapField<ulong, global::DmEnvRpc.V1.Tensor>.Codec _map_actions_codec
        = new pbc::MapField<ulong, global::DmEnvRpc.V1.Tensor>.Codec(pb::FieldCodec.ForUInt64(8), pb::FieldCodec.ForMessage(18, global::DmEnvRpc.V1.Tensor.Parser), 10);
    private readonly pbc::MapField<ulong, global::DmEnvRpc.V1.Tensor> actions_ = new pbc::MapField<ulong, global::DmEnvRpc.V1.Tensor>();
    /// <summary>
    /// The actions to perform on the environment.  If the environment is currently
    /// in a non-RUNNING state, whether because the agent has just called
    /// JoinWorld, the state from the last is StepResponse was TERMINATED or
    /// INTERRUPTED, or a ResetRequest had previously been sent, the actions will
    /// be ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<ulong, global::DmEnvRpc.V1.Tensor> Actions {
      get { return actions_; }
    }

    /// <summary>Field number for the "requested_observations" field.</summary>
    public const int RequestedObservationsFieldNumber = 2;
    private static readonly pb::FieldCodec<ulong> _repeated_requestedObservations_codec
        = pb::FieldCodec.ForUInt64(18);
    private readonly pbc::RepeatedField<ulong> requestedObservations_ = new pbc::RepeatedField<ulong>();
    /// <summary>
    /// Array of observations UIDs to return. If not set, no observations are
    /// returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> RequestedObservations {
      get { return requestedObservations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Actions.Equals(other.Actions)) return false;
      if(!requestedObservations_.Equals(other.requestedObservations_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Actions.GetHashCode();
      hash ^= requestedObservations_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      actions_.WriteTo(output, _map_actions_codec);
      requestedObservations_.WriteTo(output, _repeated_requestedObservations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += actions_.CalculateSize(_map_actions_codec);
      size += requestedObservations_.CalculateSize(_repeated_requestedObservations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepRequest other) {
      if (other == null) {
        return;
      }
      actions_.Add(other.actions_);
      requestedObservations_.Add(other.requestedObservations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            actions_.AddEntriesFrom(input, _map_actions_codec);
            break;
          }
          case 18:
          case 16: {
            requestedObservations_.AddEntriesFrom(input, _repeated_requestedObservations_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StepResponse : pb::IMessage<StepResponse> {
    private static readonly pb::MessageParser<StepResponse> _parser = new pb::MessageParser<StepResponse>(() => new StepResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StepResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepResponse(StepResponse other) : this() {
      state_ = other.state_;
      observations_ = other.observations_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StepResponse Clone() {
      return new StepResponse(this);
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 1;
    private global::DmEnvRpc.V1.EnvironmentStateType state_ = 0;
    /// <summary>
    /// If state is not RUNNING, the action on the next StepRequest will be
    /// ignored and the environment will transition to a RUNNING state.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.EnvironmentStateType State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    /// <summary>Field number for the "observations" field.</summary>
    public const int ObservationsFieldNumber = 2;
    private static readonly pbc::MapField<ulong, global::DmEnvRpc.V1.Tensor>.Codec _map_observations_codec
        = new pbc::MapField<ulong, global::DmEnvRpc.V1.Tensor>.Codec(pb::FieldCodec.ForUInt64(8), pb::FieldCodec.ForMessage(18, global::DmEnvRpc.V1.Tensor.Parser), 18);
    private readonly pbc::MapField<ulong, global::DmEnvRpc.V1.Tensor> observations_ = new pbc::MapField<ulong, global::DmEnvRpc.V1.Tensor>();
    /// <summary>
    /// The observations requested in `StepRequest`.  Observations returned should
    /// match the dimensionality and type specified in `specs.observations`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<ulong, global::DmEnvRpc.V1.Tensor> Observations {
      get { return observations_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StepResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StepResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (State != other.State) return false;
      if (!Observations.Equals(other.Observations)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (State != 0) hash ^= State.GetHashCode();
      hash ^= Observations.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (State != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) State);
      }
      observations_.WriteTo(output, _map_observations_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      size += observations_.CalculateSize(_map_observations_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StepResponse other) {
      if (other == null) {
        return;
      }
      if (other.State != 0) {
        State = other.State;
      }
      observations_.Add(other.observations_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            State = (global::DmEnvRpc.V1.EnvironmentStateType) input.ReadEnum();
            break;
          }
          case 18: {
            observations_.AddEntriesFrom(input, _map_observations_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// The current sequence will be interrupted.  The actions on the next call to
  /// StepRequest will be ignored and a new sequence will begin.
  /// </summary>
  public sealed partial class ResetRequest : pb::IMessage<ResetRequest> {
    private static readonly pb::MessageParser<ResetRequest> _parser = new pb::MessageParser<ResetRequest>(() => new ResetRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetRequest(ResetRequest other) : this() {
      settings_ = other.settings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetRequest Clone() {
      return new ResetRequest(this);
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::DmEnvRpc.V1.Tensor>.Codec _map_settings_codec
        = new pbc::MapField<string, global::DmEnvRpc.V1.Tensor>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::DmEnvRpc.V1.Tensor.Parser), 10);
    private readonly pbc::MapField<string, global::DmEnvRpc.V1.Tensor> settings_ = new pbc::MapField<string, global::DmEnvRpc.V1.Tensor>();
    /// <summary>
    /// Agents-specific settings to apply for the next sequence, such as changing
    /// class in an RPG.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::DmEnvRpc.V1.Tensor> Settings {
      get { return settings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Settings.Equals(other.Settings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Settings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      settings_.WriteTo(output, _map_settings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += settings_.CalculateSize(_map_settings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetRequest other) {
      if (other == null) {
        return;
      }
      settings_.Add(other.settings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            settings_.AddEntriesFrom(input, _map_settings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResetResponse : pb::IMessage<ResetResponse> {
    private static readonly pb::MessageParser<ResetResponse> _parser = new pb::MessageParser<ResetResponse>(() => new ResetResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetResponse(ResetResponse other) : this() {
      specs_ = other.specs_ != null ? other.specs_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetResponse Clone() {
      return new ResetResponse(this);
    }

    /// <summary>Field number for the "specs" field.</summary>
    public const int SpecsFieldNumber = 1;
    private global::DmEnvRpc.V1.ActionObservationSpecs specs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.ActionObservationSpecs Specs {
      get { return specs_; }
      set {
        specs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Specs, other.Specs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (specs_ != null) hash ^= Specs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (specs_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Specs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (specs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Specs);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetResponse other) {
      if (other == null) {
        return;
      }
      if (other.specs_ != null) {
        if (specs_ == null) {
          Specs = new global::DmEnvRpc.V1.ActionObservationSpecs();
        }
        Specs.MergeFrom(other.Specs);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (specs_ == null) {
              Specs = new global::DmEnvRpc.V1.ActionObservationSpecs();
            }
            input.ReadMessage(Specs);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// All connected agents will have their next StepResponse return INTERRUPTED.
  /// </summary>
  public sealed partial class ResetWorldRequest : pb::IMessage<ResetWorldRequest> {
    private static readonly pb::MessageParser<ResetWorldRequest> _parser = new pb::MessageParser<ResetWorldRequest>(() => new ResetWorldRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetWorldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetWorldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetWorldRequest(ResetWorldRequest other) : this() {
      worldName_ = other.worldName_;
      settings_ = other.settings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetWorldRequest Clone() {
      return new ResetWorldRequest(this);
    }

    /// <summary>Field number for the "world_name" field.</summary>
    public const int WorldNameFieldNumber = 1;
    private string worldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorldName {
      get { return worldName_; }
      set {
        worldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 2;
    private static readonly pbc::MapField<string, global::DmEnvRpc.V1.Tensor>.Codec _map_settings_codec
        = new pbc::MapField<string, global::DmEnvRpc.V1.Tensor>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::DmEnvRpc.V1.Tensor.Parser), 18);
    private readonly pbc::MapField<string, global::DmEnvRpc.V1.Tensor> settings_ = new pbc::MapField<string, global::DmEnvRpc.V1.Tensor>();
    /// <summary>
    /// World settings to apply for the next sequence, such as changing the map or
    /// seed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::DmEnvRpc.V1.Tensor> Settings {
      get { return settings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetWorldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetWorldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldName != other.WorldName) return false;
      if (!Settings.Equals(other.Settings)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldName.Length != 0) hash ^= WorldName.GetHashCode();
      hash ^= Settings.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorldName);
      }
      settings_.WriteTo(output, _map_settings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorldName);
      }
      size += settings_.CalculateSize(_map_settings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetWorldRequest other) {
      if (other == null) {
        return;
      }
      if (other.WorldName.Length != 0) {
        WorldName = other.WorldName;
      }
      settings_.Add(other.settings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorldName = input.ReadString();
            break;
          }
          case 18: {
            settings_.AddEntriesFrom(input, _map_settings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResetWorldResponse : pb::IMessage<ResetWorldResponse> {
    private static readonly pb::MessageParser<ResetWorldResponse> _parser = new pb::MessageParser<ResetWorldResponse>(() => new ResetWorldResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetWorldResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetWorldResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetWorldResponse(ResetWorldResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetWorldResponse Clone() {
      return new ResetWorldResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetWorldResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetWorldResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetWorldResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LeaveWorldRequest : pb::IMessage<LeaveWorldRequest> {
    private static readonly pb::MessageParser<LeaveWorldRequest> _parser = new pb::MessageParser<LeaveWorldRequest>(() => new LeaveWorldRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveWorldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveWorldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveWorldRequest(LeaveWorldRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveWorldRequest Clone() {
      return new LeaveWorldRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveWorldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveWorldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveWorldRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LeaveWorldResponse : pb::IMessage<LeaveWorldResponse> {
    private static readonly pb::MessageParser<LeaveWorldResponse> _parser = new pb::MessageParser<LeaveWorldResponse>(() => new LeaveWorldResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LeaveWorldResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveWorldResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveWorldResponse(LeaveWorldResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LeaveWorldResponse Clone() {
      return new LeaveWorldResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LeaveWorldResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LeaveWorldResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LeaveWorldResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class DestroyWorldRequest : pb::IMessage<DestroyWorldRequest> {
    private static readonly pb::MessageParser<DestroyWorldRequest> _parser = new pb::MessageParser<DestroyWorldRequest>(() => new DestroyWorldRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestroyWorldRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyWorldRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyWorldRequest(DestroyWorldRequest other) : this() {
      worldName_ = other.worldName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyWorldRequest Clone() {
      return new DestroyWorldRequest(this);
    }

    /// <summary>Field number for the "world_name" field.</summary>
    public const int WorldNameFieldNumber = 1;
    private string worldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string WorldName {
      get { return worldName_; }
      set {
        worldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestroyWorldRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestroyWorldRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (WorldName != other.WorldName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (WorldName.Length != 0) hash ^= WorldName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (WorldName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(WorldName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (WorldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(WorldName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestroyWorldRequest other) {
      if (other == null) {
        return;
      }
      if (other.WorldName.Length != 0) {
        WorldName = other.WorldName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            WorldName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DestroyWorldResponse : pb::IMessage<DestroyWorldResponse> {
    private static readonly pb::MessageParser<DestroyWorldResponse> _parser = new pb::MessageParser<DestroyWorldResponse>(() => new DestroyWorldResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DestroyWorldResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyWorldResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyWorldResponse(DestroyWorldResponse other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DestroyWorldResponse Clone() {
      return new DestroyWorldResponse(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DestroyWorldResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DestroyWorldResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DestroyWorldResponse other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class EnvironmentRequest : pb::IMessage<EnvironmentRequest> {
    private static readonly pb::MessageParser<EnvironmentRequest> _parser = new pb::MessageParser<EnvironmentRequest>(() => new EnvironmentRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnvironmentRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvironmentRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvironmentRequest(EnvironmentRequest other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.CreateWorld:
          CreateWorld = other.CreateWorld.Clone();
          break;
        case PayloadOneofCase.JoinWorld:
          JoinWorld = other.JoinWorld.Clone();
          break;
        case PayloadOneofCase.Step:
          Step = other.Step.Clone();
          break;
        case PayloadOneofCase.Reset:
          Reset = other.Reset.Clone();
          break;
        case PayloadOneofCase.ResetWorld:
          ResetWorld = other.ResetWorld.Clone();
          break;
        case PayloadOneofCase.LeaveWorld:
          LeaveWorld = other.LeaveWorld.Clone();
          break;
        case PayloadOneofCase.DestroyWorld:
          DestroyWorld = other.DestroyWorld.Clone();
          break;
        case PayloadOneofCase.Extension:
          Extension = other.Extension.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvironmentRequest Clone() {
      return new EnvironmentRequest(this);
    }

    /// <summary>Field number for the "create_world" field.</summary>
    public const int CreateWorldFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.CreateWorldRequest CreateWorld {
      get { return payloadCase_ == PayloadOneofCase.CreateWorld ? (global::DmEnvRpc.V1.CreateWorldRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.CreateWorld;
      }
    }

    /// <summary>Field number for the "join_world" field.</summary>
    public const int JoinWorldFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.JoinWorldRequest JoinWorld {
      get { return payloadCase_ == PayloadOneofCase.JoinWorld ? (global::DmEnvRpc.V1.JoinWorldRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinWorld;
      }
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.StepRequest Step {
      get { return payloadCase_ == PayloadOneofCase.Step ? (global::DmEnvRpc.V1.StepRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Step;
      }
    }

    /// <summary>Field number for the "reset" field.</summary>
    public const int ResetFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.ResetRequest Reset {
      get { return payloadCase_ == PayloadOneofCase.Reset ? (global::DmEnvRpc.V1.ResetRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Reset;
      }
    }

    /// <summary>Field number for the "reset_world" field.</summary>
    public const int ResetWorldFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.ResetWorldRequest ResetWorld {
      get { return payloadCase_ == PayloadOneofCase.ResetWorld ? (global::DmEnvRpc.V1.ResetWorldRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ResetWorld;
      }
    }

    /// <summary>Field number for the "leave_world" field.</summary>
    public const int LeaveWorldFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.LeaveWorldRequest LeaveWorld {
      get { return payloadCase_ == PayloadOneofCase.LeaveWorld ? (global::DmEnvRpc.V1.LeaveWorldRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LeaveWorld;
      }
    }

    /// <summary>Field number for the "destroy_world" field.</summary>
    public const int DestroyWorldFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.DestroyWorldRequest DestroyWorld {
      get { return payloadCase_ == PayloadOneofCase.DestroyWorld ? (global::DmEnvRpc.V1.DestroyWorldRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DestroyWorld;
      }
    }

    /// <summary>Field number for the "extension" field.</summary>
    public const int ExtensionFieldNumber = 15;
    /// <summary>
    /// If the environment supports a specialized request not covered above it
    /// can be sent this way.
    ///
    /// Slot 15 is the last slot which can be encoded with one byte.  See
    /// https://developers.google.com/protocol-buffers/docs/proto3#assigning-field-numbers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Extension {
      get { return payloadCase_ == PayloadOneofCase.Extension ? (global::Google.Protobuf.WellKnownTypes.Any) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Extension;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      CreateWorld = 1,
      JoinWorld = 2,
      Step = 3,
      Reset = 4,
      ResetWorld = 5,
      LeaveWorld = 6,
      DestroyWorld = 7,
      Extension = 15,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnvironmentRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnvironmentRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateWorld, other.CreateWorld)) return false;
      if (!object.Equals(JoinWorld, other.JoinWorld)) return false;
      if (!object.Equals(Step, other.Step)) return false;
      if (!object.Equals(Reset, other.Reset)) return false;
      if (!object.Equals(ResetWorld, other.ResetWorld)) return false;
      if (!object.Equals(LeaveWorld, other.LeaveWorld)) return false;
      if (!object.Equals(DestroyWorld, other.DestroyWorld)) return false;
      if (!object.Equals(Extension, other.Extension)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.CreateWorld) hash ^= CreateWorld.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.JoinWorld) hash ^= JoinWorld.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Step) hash ^= Step.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Reset) hash ^= Reset.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ResetWorld) hash ^= ResetWorld.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.LeaveWorld) hash ^= LeaveWorld.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DestroyWorld) hash ^= DestroyWorld.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Extension) hash ^= Extension.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.CreateWorld) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateWorld);
      }
      if (payloadCase_ == PayloadOneofCase.JoinWorld) {
        output.WriteRawTag(18);
        output.WriteMessage(JoinWorld);
      }
      if (payloadCase_ == PayloadOneofCase.Step) {
        output.WriteRawTag(26);
        output.WriteMessage(Step);
      }
      if (payloadCase_ == PayloadOneofCase.Reset) {
        output.WriteRawTag(34);
        output.WriteMessage(Reset);
      }
      if (payloadCase_ == PayloadOneofCase.ResetWorld) {
        output.WriteRawTag(42);
        output.WriteMessage(ResetWorld);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveWorld) {
        output.WriteRawTag(50);
        output.WriteMessage(LeaveWorld);
      }
      if (payloadCase_ == PayloadOneofCase.DestroyWorld) {
        output.WriteRawTag(58);
        output.WriteMessage(DestroyWorld);
      }
      if (payloadCase_ == PayloadOneofCase.Extension) {
        output.WriteRawTag(122);
        output.WriteMessage(Extension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.CreateWorld) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateWorld);
      }
      if (payloadCase_ == PayloadOneofCase.JoinWorld) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinWorld);
      }
      if (payloadCase_ == PayloadOneofCase.Step) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Step);
      }
      if (payloadCase_ == PayloadOneofCase.Reset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reset);
      }
      if (payloadCase_ == PayloadOneofCase.ResetWorld) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResetWorld);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveWorld) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaveWorld);
      }
      if (payloadCase_ == PayloadOneofCase.DestroyWorld) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyWorld);
      }
      if (payloadCase_ == PayloadOneofCase.Extension) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Extension);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnvironmentRequest other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.CreateWorld:
          if (CreateWorld == null) {
            CreateWorld = new global::DmEnvRpc.V1.CreateWorldRequest();
          }
          CreateWorld.MergeFrom(other.CreateWorld);
          break;
        case PayloadOneofCase.JoinWorld:
          if (JoinWorld == null) {
            JoinWorld = new global::DmEnvRpc.V1.JoinWorldRequest();
          }
          JoinWorld.MergeFrom(other.JoinWorld);
          break;
        case PayloadOneofCase.Step:
          if (Step == null) {
            Step = new global::DmEnvRpc.V1.StepRequest();
          }
          Step.MergeFrom(other.Step);
          break;
        case PayloadOneofCase.Reset:
          if (Reset == null) {
            Reset = new global::DmEnvRpc.V1.ResetRequest();
          }
          Reset.MergeFrom(other.Reset);
          break;
        case PayloadOneofCase.ResetWorld:
          if (ResetWorld == null) {
            ResetWorld = new global::DmEnvRpc.V1.ResetWorldRequest();
          }
          ResetWorld.MergeFrom(other.ResetWorld);
          break;
        case PayloadOneofCase.LeaveWorld:
          if (LeaveWorld == null) {
            LeaveWorld = new global::DmEnvRpc.V1.LeaveWorldRequest();
          }
          LeaveWorld.MergeFrom(other.LeaveWorld);
          break;
        case PayloadOneofCase.DestroyWorld:
          if (DestroyWorld == null) {
            DestroyWorld = new global::DmEnvRpc.V1.DestroyWorldRequest();
          }
          DestroyWorld.MergeFrom(other.DestroyWorld);
          break;
        case PayloadOneofCase.Extension:
          if (Extension == null) {
            Extension = new global::Google.Protobuf.WellKnownTypes.Any();
          }
          Extension.MergeFrom(other.Extension);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::DmEnvRpc.V1.CreateWorldRequest subBuilder = new global::DmEnvRpc.V1.CreateWorldRequest();
            if (payloadCase_ == PayloadOneofCase.CreateWorld) {
              subBuilder.MergeFrom(CreateWorld);
            }
            input.ReadMessage(subBuilder);
            CreateWorld = subBuilder;
            break;
          }
          case 18: {
            global::DmEnvRpc.V1.JoinWorldRequest subBuilder = new global::DmEnvRpc.V1.JoinWorldRequest();
            if (payloadCase_ == PayloadOneofCase.JoinWorld) {
              subBuilder.MergeFrom(JoinWorld);
            }
            input.ReadMessage(subBuilder);
            JoinWorld = subBuilder;
            break;
          }
          case 26: {
            global::DmEnvRpc.V1.StepRequest subBuilder = new global::DmEnvRpc.V1.StepRequest();
            if (payloadCase_ == PayloadOneofCase.Step) {
              subBuilder.MergeFrom(Step);
            }
            input.ReadMessage(subBuilder);
            Step = subBuilder;
            break;
          }
          case 34: {
            global::DmEnvRpc.V1.ResetRequest subBuilder = new global::DmEnvRpc.V1.ResetRequest();
            if (payloadCase_ == PayloadOneofCase.Reset) {
              subBuilder.MergeFrom(Reset);
            }
            input.ReadMessage(subBuilder);
            Reset = subBuilder;
            break;
          }
          case 42: {
            global::DmEnvRpc.V1.ResetWorldRequest subBuilder = new global::DmEnvRpc.V1.ResetWorldRequest();
            if (payloadCase_ == PayloadOneofCase.ResetWorld) {
              subBuilder.MergeFrom(ResetWorld);
            }
            input.ReadMessage(subBuilder);
            ResetWorld = subBuilder;
            break;
          }
          case 50: {
            global::DmEnvRpc.V1.LeaveWorldRequest subBuilder = new global::DmEnvRpc.V1.LeaveWorldRequest();
            if (payloadCase_ == PayloadOneofCase.LeaveWorld) {
              subBuilder.MergeFrom(LeaveWorld);
            }
            input.ReadMessage(subBuilder);
            LeaveWorld = subBuilder;
            break;
          }
          case 58: {
            global::DmEnvRpc.V1.DestroyWorldRequest subBuilder = new global::DmEnvRpc.V1.DestroyWorldRequest();
            if (payloadCase_ == PayloadOneofCase.DestroyWorld) {
              subBuilder.MergeFrom(DestroyWorld);
            }
            input.ReadMessage(subBuilder);
            DestroyWorld = subBuilder;
            break;
          }
          case 122: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (payloadCase_ == PayloadOneofCase.Extension) {
              subBuilder.MergeFrom(Extension);
            }
            input.ReadMessage(subBuilder);
            Extension = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class EnvironmentResponse : pb::IMessage<EnvironmentResponse> {
    private static readonly pb::MessageParser<EnvironmentResponse> _parser = new pb::MessageParser<EnvironmentResponse>(() => new EnvironmentResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EnvironmentResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DmEnvRpc.V1.DmEnvRpcReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvironmentResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvironmentResponse(EnvironmentResponse other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.CreateWorld:
          CreateWorld = other.CreateWorld.Clone();
          break;
        case PayloadOneofCase.JoinWorld:
          JoinWorld = other.JoinWorld.Clone();
          break;
        case PayloadOneofCase.Step:
          Step = other.Step.Clone();
          break;
        case PayloadOneofCase.Reset:
          Reset = other.Reset.Clone();
          break;
        case PayloadOneofCase.ResetWorld:
          ResetWorld = other.ResetWorld.Clone();
          break;
        case PayloadOneofCase.LeaveWorld:
          LeaveWorld = other.LeaveWorld.Clone();
          break;
        case PayloadOneofCase.DestroyWorld:
          DestroyWorld = other.DestroyWorld.Clone();
          break;
        case PayloadOneofCase.Extension:
          Extension = other.Extension.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EnvironmentResponse Clone() {
      return new EnvironmentResponse(this);
    }

    /// <summary>Field number for the "create_world" field.</summary>
    public const int CreateWorldFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.CreateWorldResponse CreateWorld {
      get { return payloadCase_ == PayloadOneofCase.CreateWorld ? (global::DmEnvRpc.V1.CreateWorldResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.CreateWorld;
      }
    }

    /// <summary>Field number for the "join_world" field.</summary>
    public const int JoinWorldFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.JoinWorldResponse JoinWorld {
      get { return payloadCase_ == PayloadOneofCase.JoinWorld ? (global::DmEnvRpc.V1.JoinWorldResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.JoinWorld;
      }
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.StepResponse Step {
      get { return payloadCase_ == PayloadOneofCase.Step ? (global::DmEnvRpc.V1.StepResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Step;
      }
    }

    /// <summary>Field number for the "reset" field.</summary>
    public const int ResetFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.ResetResponse Reset {
      get { return payloadCase_ == PayloadOneofCase.Reset ? (global::DmEnvRpc.V1.ResetResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Reset;
      }
    }

    /// <summary>Field number for the "reset_world" field.</summary>
    public const int ResetWorldFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.ResetWorldResponse ResetWorld {
      get { return payloadCase_ == PayloadOneofCase.ResetWorld ? (global::DmEnvRpc.V1.ResetWorldResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.ResetWorld;
      }
    }

    /// <summary>Field number for the "leave_world" field.</summary>
    public const int LeaveWorldFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.LeaveWorldResponse LeaveWorld {
      get { return payloadCase_ == PayloadOneofCase.LeaveWorld ? (global::DmEnvRpc.V1.LeaveWorldResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LeaveWorld;
      }
    }

    /// <summary>Field number for the "destroy_world" field.</summary>
    public const int DestroyWorldFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::DmEnvRpc.V1.DestroyWorldResponse DestroyWorld {
      get { return payloadCase_ == PayloadOneofCase.DestroyWorld ? (global::DmEnvRpc.V1.DestroyWorldResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DestroyWorld;
      }
    }

    /// <summary>Field number for the "extension" field.</summary>
    public const int ExtensionFieldNumber = 15;
    /// <summary>
    /// If the environment supports a specialized response not covered above it
    /// can be sent this way.
    ///
    /// Slot 15 is the last slot which can be encoded with one byte.  See
    /// https://developers.google.com/protocol-buffers/docs/proto3#assigning-field-numbers
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Any Extension {
      get { return payloadCase_ == PayloadOneofCase.Extension ? (global::Google.Protobuf.WellKnownTypes.Any) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Extension;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      CreateWorld = 1,
      JoinWorld = 2,
      Step = 3,
      Reset = 4,
      ResetWorld = 5,
      LeaveWorld = 6,
      DestroyWorld = 7,
      Extension = 15,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EnvironmentResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EnvironmentResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(CreateWorld, other.CreateWorld)) return false;
      if (!object.Equals(JoinWorld, other.JoinWorld)) return false;
      if (!object.Equals(Step, other.Step)) return false;
      if (!object.Equals(Reset, other.Reset)) return false;
      if (!object.Equals(ResetWorld, other.ResetWorld)) return false;
      if (!object.Equals(LeaveWorld, other.LeaveWorld)) return false;
      if (!object.Equals(DestroyWorld, other.DestroyWorld)) return false;
      if (!object.Equals(Extension, other.Extension)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.CreateWorld) hash ^= CreateWorld.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.JoinWorld) hash ^= JoinWorld.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Step) hash ^= Step.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Reset) hash ^= Reset.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.ResetWorld) hash ^= ResetWorld.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.LeaveWorld) hash ^= LeaveWorld.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DestroyWorld) hash ^= DestroyWorld.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Extension) hash ^= Extension.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.CreateWorld) {
        output.WriteRawTag(10);
        output.WriteMessage(CreateWorld);
      }
      if (payloadCase_ == PayloadOneofCase.JoinWorld) {
        output.WriteRawTag(18);
        output.WriteMessage(JoinWorld);
      }
      if (payloadCase_ == PayloadOneofCase.Step) {
        output.WriteRawTag(26);
        output.WriteMessage(Step);
      }
      if (payloadCase_ == PayloadOneofCase.Reset) {
        output.WriteRawTag(34);
        output.WriteMessage(Reset);
      }
      if (payloadCase_ == PayloadOneofCase.ResetWorld) {
        output.WriteRawTag(42);
        output.WriteMessage(ResetWorld);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveWorld) {
        output.WriteRawTag(50);
        output.WriteMessage(LeaveWorld);
      }
      if (payloadCase_ == PayloadOneofCase.DestroyWorld) {
        output.WriteRawTag(58);
        output.WriteMessage(DestroyWorld);
      }
      if (payloadCase_ == PayloadOneofCase.Extension) {
        output.WriteRawTag(122);
        output.WriteMessage(Extension);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.CreateWorld) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreateWorld);
      }
      if (payloadCase_ == PayloadOneofCase.JoinWorld) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(JoinWorld);
      }
      if (payloadCase_ == PayloadOneofCase.Step) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Step);
      }
      if (payloadCase_ == PayloadOneofCase.Reset) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Reset);
      }
      if (payloadCase_ == PayloadOneofCase.ResetWorld) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResetWorld);
      }
      if (payloadCase_ == PayloadOneofCase.LeaveWorld) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LeaveWorld);
      }
      if (payloadCase_ == PayloadOneofCase.DestroyWorld) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DestroyWorld);
      }
      if (payloadCase_ == PayloadOneofCase.Extension) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Extension);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EnvironmentResponse other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.CreateWorld:
          if (CreateWorld == null) {
            CreateWorld = new global::DmEnvRpc.V1.CreateWorldResponse();
          }
          CreateWorld.MergeFrom(other.CreateWorld);
          break;
        case PayloadOneofCase.JoinWorld:
          if (JoinWorld == null) {
            JoinWorld = new global::DmEnvRpc.V1.JoinWorldResponse();
          }
          JoinWorld.MergeFrom(other.JoinWorld);
          break;
        case PayloadOneofCase.Step:
          if (Step == null) {
            Step = new global::DmEnvRpc.V1.StepResponse();
          }
          Step.MergeFrom(other.Step);
          break;
        case PayloadOneofCase.Reset:
          if (Reset == null) {
            Reset = new global::DmEnvRpc.V1.ResetResponse();
          }
          Reset.MergeFrom(other.Reset);
          break;
        case PayloadOneofCase.ResetWorld:
          if (ResetWorld == null) {
            ResetWorld = new global::DmEnvRpc.V1.ResetWorldResponse();
          }
          ResetWorld.MergeFrom(other.ResetWorld);
          break;
        case PayloadOneofCase.LeaveWorld:
          if (LeaveWorld == null) {
            LeaveWorld = new global::DmEnvRpc.V1.LeaveWorldResponse();
          }
          LeaveWorld.MergeFrom(other.LeaveWorld);
          break;
        case PayloadOneofCase.DestroyWorld:
          if (DestroyWorld == null) {
            DestroyWorld = new global::DmEnvRpc.V1.DestroyWorldResponse();
          }
          DestroyWorld.MergeFrom(other.DestroyWorld);
          break;
        case PayloadOneofCase.Extension:
          if (Extension == null) {
            Extension = new global::Google.Protobuf.WellKnownTypes.Any();
          }
          Extension.MergeFrom(other.Extension);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::DmEnvRpc.V1.CreateWorldResponse subBuilder = new global::DmEnvRpc.V1.CreateWorldResponse();
            if (payloadCase_ == PayloadOneofCase.CreateWorld) {
              subBuilder.MergeFrom(CreateWorld);
            }
            input.ReadMessage(subBuilder);
            CreateWorld = subBuilder;
            break;
          }
          case 18: {
            global::DmEnvRpc.V1.JoinWorldResponse subBuilder = new global::DmEnvRpc.V1.JoinWorldResponse();
            if (payloadCase_ == PayloadOneofCase.JoinWorld) {
              subBuilder.MergeFrom(JoinWorld);
            }
            input.ReadMessage(subBuilder);
            JoinWorld = subBuilder;
            break;
          }
          case 26: {
            global::DmEnvRpc.V1.StepResponse subBuilder = new global::DmEnvRpc.V1.StepResponse();
            if (payloadCase_ == PayloadOneofCase.Step) {
              subBuilder.MergeFrom(Step);
            }
            input.ReadMessage(subBuilder);
            Step = subBuilder;
            break;
          }
          case 34: {
            global::DmEnvRpc.V1.ResetResponse subBuilder = new global::DmEnvRpc.V1.ResetResponse();
            if (payloadCase_ == PayloadOneofCase.Reset) {
              subBuilder.MergeFrom(Reset);
            }
            input.ReadMessage(subBuilder);
            Reset = subBuilder;
            break;
          }
          case 42: {
            global::DmEnvRpc.V1.ResetWorldResponse subBuilder = new global::DmEnvRpc.V1.ResetWorldResponse();
            if (payloadCase_ == PayloadOneofCase.ResetWorld) {
              subBuilder.MergeFrom(ResetWorld);
            }
            input.ReadMessage(subBuilder);
            ResetWorld = subBuilder;
            break;
          }
          case 50: {
            global::DmEnvRpc.V1.LeaveWorldResponse subBuilder = new global::DmEnvRpc.V1.LeaveWorldResponse();
            if (payloadCase_ == PayloadOneofCase.LeaveWorld) {
              subBuilder.MergeFrom(LeaveWorld);
            }
            input.ReadMessage(subBuilder);
            LeaveWorld = subBuilder;
            break;
          }
          case 58: {
            global::DmEnvRpc.V1.DestroyWorldResponse subBuilder = new global::DmEnvRpc.V1.DestroyWorldResponse();
            if (payloadCase_ == PayloadOneofCase.DestroyWorld) {
              subBuilder.MergeFrom(DestroyWorld);
            }
            input.ReadMessage(subBuilder);
            DestroyWorld = subBuilder;
            break;
          }
          case 122: {
            global::Google.Protobuf.WellKnownTypes.Any subBuilder = new global::Google.Protobuf.WellKnownTypes.Any();
            if (payloadCase_ == PayloadOneofCase.Extension) {
              subBuilder.MergeFrom(Extension);
            }
            input.ReadMessage(subBuilder);
            Extension = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
